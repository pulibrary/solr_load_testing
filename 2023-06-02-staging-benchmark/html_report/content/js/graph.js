/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 30.0, "minX": 0.0, "maxY": 30715.0, "series": [{"data": [[0.0, 1080.0], [0.1, 1101.0], [0.2, 1109.0], [0.3, 1113.0], [0.4, 1122.0], [0.5, 1128.0], [0.6, 1135.0], [0.7, 1140.0], [0.8, 1149.0], [0.9, 1156.0], [1.0, 1162.0], [1.1, 1168.0], [1.2, 1177.0], [1.3, 1185.0], [1.4, 1193.0], [1.5, 1202.0], [1.6, 1207.0], [1.7, 1215.0], [1.8, 1221.0], [1.9, 1226.0], [2.0, 1231.0], [2.1, 1234.0], [2.2, 1238.0], [2.3, 1242.0], [2.4, 1246.0], [2.5, 1249.0], [2.6, 1253.0], [2.7, 1257.0], [2.8, 1261.0], [2.9, 1265.0], [3.0, 1269.0], [3.1, 1274.0], [3.2, 1279.0], [3.3, 1284.0], [3.4, 1288.0], [3.5, 1293.0], [3.6, 1300.0], [3.7, 1303.0], [3.8, 1309.0], [3.9, 1313.0], [4.0, 1318.0], [4.1, 1324.0], [4.2, 1332.0], [4.3, 1338.0], [4.4, 1343.0], [4.5, 1349.0], [4.6, 1356.0], [4.7, 1361.0], [4.8, 1366.0], [4.9, 1372.0], [5.0, 1378.0], [5.1, 1386.0], [5.2, 1392.0], [5.3, 1398.0], [5.4, 1406.0], [5.5, 1413.0], [5.6, 1421.0], [5.7, 1431.0], [5.8, 1440.0], [5.9, 1448.0], [6.0, 1456.0], [6.1, 1462.0], [6.2, 1468.0], [6.3, 1477.0], [6.4, 1483.0], [6.5, 1493.0], [6.6, 1500.0], [6.7, 1507.0], [6.8, 1516.0], [6.9, 1523.0], [7.0, 1532.0], [7.1, 1542.0], [7.2, 1549.0], [7.3, 1558.0], [7.4, 1568.0], [7.5, 1574.0], [7.6, 1581.0], [7.7, 1589.0], [7.8, 1601.0], [7.9, 1612.0], [8.0, 1624.0], [8.1, 1635.0], [8.2, 1645.0], [8.3, 1655.0], [8.4, 1665.0], [8.5, 1676.0], [8.6, 1687.0], [8.7, 1700.0], [8.8, 1707.0], [8.9, 1716.0], [9.0, 1728.0], [9.1, 1737.0], [9.2, 1747.0], [9.3, 1754.0], [9.4, 1764.0], [9.5, 1773.0], [9.6, 1782.0], [9.7, 1790.0], [9.8, 1800.0], [9.9, 1813.0], [10.0, 1822.0], [10.1, 1834.0], [10.2, 1845.0], [10.3, 1858.0], [10.4, 1871.0], [10.5, 1880.0], [10.6, 1894.0], [10.7, 1904.0], [10.8, 1914.0], [10.9, 1925.0], [11.0, 1941.0], [11.1, 1950.0], [11.2, 1960.0], [11.3, 1971.0], [11.4, 1981.0], [11.5, 1992.0], [11.6, 2001.0], [11.7, 2015.0], [11.8, 2024.0], [11.9, 2035.0], [12.0, 2042.0], [12.1, 2050.0], [12.2, 2059.0], [12.3, 2069.0], [12.4, 2078.0], [12.5, 2089.0], [12.6, 2103.0], [12.7, 2111.0], [12.8, 2119.0], [12.9, 2129.0], [13.0, 2140.0], [13.1, 2148.0], [13.2, 2157.0], [13.3, 2168.0], [13.4, 2183.0], [13.5, 2192.0], [13.6, 2203.0], [13.7, 2213.0], [13.8, 2227.0], [13.9, 2238.0], [14.0, 2246.0], [14.1, 2256.0], [14.2, 2265.0], [14.3, 2274.0], [14.4, 2283.0], [14.5, 2292.0], [14.6, 2301.0], [14.7, 2314.0], [14.8, 2325.0], [14.9, 2334.0], [15.0, 2349.0], [15.1, 2358.0], [15.2, 2365.0], [15.3, 2379.0], [15.4, 2390.0], [15.5, 2403.0], [15.6, 2411.0], [15.7, 2421.0], [15.8, 2431.0], [15.9, 2442.0], [16.0, 2452.0], [16.1, 2461.0], [16.2, 2471.0], [16.3, 2485.0], [16.4, 2498.0], [16.5, 2505.0], [16.6, 2516.0], [16.7, 2525.0], [16.8, 2540.0], [16.9, 2552.0], [17.0, 2560.0], [17.1, 2569.0], [17.2, 2581.0], [17.3, 2594.0], [17.4, 2603.0], [17.5, 2612.0], [17.6, 2625.0], [17.7, 2633.0], [17.8, 2643.0], [17.9, 2651.0], [18.0, 2663.0], [18.1, 2674.0], [18.2, 2682.0], [18.3, 2698.0], [18.4, 2710.0], [18.5, 2719.0], [18.6, 2728.0], [18.7, 2736.0], [18.8, 2744.0], [18.9, 2755.0], [19.0, 2765.0], [19.1, 2774.0], [19.2, 2785.0], [19.3, 2800.0], [19.4, 2810.0], [19.5, 2821.0], [19.6, 2830.0], [19.7, 2843.0], [19.8, 2851.0], [19.9, 2863.0], [20.0, 2874.0], [20.1, 2887.0], [20.2, 2893.0], [20.3, 2905.0], [20.4, 2914.0], [20.5, 2925.0], [20.6, 2938.0], [20.7, 2951.0], [20.8, 2963.0], [20.9, 2976.0], [21.0, 2991.0], [21.1, 3006.0], [21.2, 3017.0], [21.3, 3024.0], [21.4, 3036.0], [21.5, 3050.0], [21.6, 3059.0], [21.7, 3075.0], [21.8, 3085.0], [21.9, 3098.0], [22.0, 3109.0], [22.1, 3119.0], [22.2, 3128.0], [22.3, 3140.0], [22.4, 3150.0], [22.5, 3164.0], [22.6, 3171.0], [22.7, 3182.0], [22.8, 3192.0], [22.9, 3203.0], [23.0, 3216.0], [23.1, 3230.0], [23.2, 3239.0], [23.3, 3251.0], [23.4, 3263.0], [23.5, 3274.0], [23.6, 3282.0], [23.7, 3295.0], [23.8, 3303.0], [23.9, 3311.0], [24.0, 3324.0], [24.1, 3334.0], [24.2, 3344.0], [24.3, 3356.0], [24.4, 3370.0], [24.5, 3382.0], [24.6, 3395.0], [24.7, 3405.0], [24.8, 3419.0], [24.9, 3430.0], [25.0, 3441.0], [25.1, 3447.0], [25.2, 3458.0], [25.3, 3467.0], [25.4, 3481.0], [25.5, 3494.0], [25.6, 3504.0], [25.7, 3513.0], [25.8, 3527.0], [25.9, 3535.0], [26.0, 3546.0], [26.1, 3557.0], [26.2, 3568.0], [26.3, 3579.0], [26.4, 3587.0], [26.5, 3598.0], [26.6, 3608.0], [26.7, 3618.0], [26.8, 3632.0], [26.9, 3640.0], [27.0, 3651.0], [27.1, 3660.0], [27.2, 3671.0], [27.3, 3681.0], [27.4, 3690.0], [27.5, 3696.0], [27.6, 3706.0], [27.7, 3720.0], [27.8, 3729.0], [27.9, 3739.0], [28.0, 3747.0], [28.1, 3755.0], [28.2, 3768.0], [28.3, 3777.0], [28.4, 3788.0], [28.5, 3802.0], [28.6, 3814.0], [28.7, 3823.0], [28.8, 3832.0], [28.9, 3844.0], [29.0, 3856.0], [29.1, 3862.0], [29.2, 3873.0], [29.3, 3880.0], [29.4, 3891.0], [29.5, 3898.0], [29.6, 3908.0], [29.7, 3919.0], [29.8, 3929.0], [29.9, 3940.0], [30.0, 3953.0], [30.1, 3961.0], [30.2, 3969.0], [30.3, 3979.0], [30.4, 3988.0], [30.5, 3996.0], [30.6, 4004.0], [30.7, 4014.0], [30.8, 4023.0], [30.9, 4031.0], [31.0, 4042.0], [31.1, 4051.0], [31.2, 4061.0], [31.3, 4069.0], [31.4, 4077.0], [31.5, 4091.0], [31.6, 4099.0], [31.7, 4111.0], [31.8, 4126.0], [31.9, 4135.0], [32.0, 4148.0], [32.1, 4157.0], [32.2, 4167.0], [32.3, 4177.0], [32.4, 4187.0], [32.5, 4198.0], [32.6, 4207.0], [32.7, 4219.0], [32.8, 4228.0], [32.9, 4237.0], [33.0, 4246.0], [33.1, 4255.0], [33.2, 4263.0], [33.3, 4271.0], [33.4, 4281.0], [33.5, 4291.0], [33.6, 4299.0], [33.7, 4306.0], [33.8, 4317.0], [33.9, 4329.0], [34.0, 4340.0], [34.1, 4352.0], [34.2, 4359.0], [34.3, 4373.0], [34.4, 4378.0], [34.5, 4389.0], [34.6, 4397.0], [34.7, 4407.0], [34.8, 4414.0], [34.9, 4426.0], [35.0, 4432.0], [35.1, 4442.0], [35.2, 4448.0], [35.3, 4458.0], [35.4, 4467.0], [35.5, 4478.0], [35.6, 4485.0], [35.7, 4496.0], [35.8, 4505.0], [35.9, 4512.0], [36.0, 4520.0], [36.1, 4526.0], [36.2, 4539.0], [36.3, 4554.0], [36.4, 4562.0], [36.5, 4574.0], [36.6, 4581.0], [36.7, 4591.0], [36.8, 4598.0], [36.9, 4607.0], [37.0, 4614.0], [37.1, 4623.0], [37.2, 4633.0], [37.3, 4641.0], [37.4, 4651.0], [37.5, 4661.0], [37.6, 4667.0], [37.7, 4672.0], [37.8, 4679.0], [37.9, 4685.0], [38.0, 4692.0], [38.1, 4700.0], [38.2, 4710.0], [38.3, 4718.0], [38.4, 4726.0], [38.5, 4735.0], [38.6, 4744.0], [38.7, 4751.0], [38.8, 4759.0], [38.9, 4766.0], [39.0, 4774.0], [39.1, 4783.0], [39.2, 4789.0], [39.3, 4798.0], [39.4, 4808.0], [39.5, 4816.0], [39.6, 4826.0], [39.7, 4832.0], [39.8, 4842.0], [39.9, 4851.0], [40.0, 4858.0], [40.1, 4866.0], [40.2, 4873.0], [40.3, 4879.0], [40.4, 4884.0], [40.5, 4894.0], [40.6, 4902.0], [40.7, 4908.0], [40.8, 4916.0], [40.9, 4929.0], [41.0, 4936.0], [41.1, 4945.0], [41.2, 4952.0], [41.3, 4958.0], [41.4, 4966.0], [41.5, 4976.0], [41.6, 4982.0], [41.7, 4990.0], [41.8, 5000.0], [41.9, 5006.0], [42.0, 5012.0], [42.1, 5018.0], [42.2, 5025.0], [42.3, 5031.0], [42.4, 5041.0], [42.5, 5046.0], [42.6, 5054.0], [42.7, 5063.0], [42.8, 5072.0], [42.9, 5078.0], [43.0, 5088.0], [43.1, 5095.0], [43.2, 5100.0], [43.3, 5108.0], [43.4, 5113.0], [43.5, 5119.0], [43.6, 5126.0], [43.7, 5132.0], [43.8, 5140.0], [43.9, 5148.0], [44.0, 5153.0], [44.1, 5164.0], [44.2, 5169.0], [44.3, 5179.0], [44.4, 5186.0], [44.5, 5192.0], [44.6, 5198.0], [44.7, 5206.0], [44.8, 5213.0], [44.9, 5221.0], [45.0, 5228.0], [45.1, 5236.0], [45.2, 5243.0], [45.3, 5249.0], [45.4, 5255.0], [45.5, 5263.0], [45.6, 5271.0], [45.7, 5280.0], [45.8, 5285.0], [45.9, 5293.0], [46.0, 5299.0], [46.1, 5308.0], [46.2, 5316.0], [46.3, 5323.0], [46.4, 5329.0], [46.5, 5335.0], [46.6, 5340.0], [46.7, 5347.0], [46.8, 5352.0], [46.9, 5359.0], [47.0, 5364.0], [47.1, 5372.0], [47.2, 5380.0], [47.3, 5389.0], [47.4, 5393.0], [47.5, 5400.0], [47.6, 5406.0], [47.7, 5412.0], [47.8, 5419.0], [47.9, 5426.0], [48.0, 5433.0], [48.1, 5439.0], [48.2, 5446.0], [48.3, 5453.0], [48.4, 5458.0], [48.5, 5464.0], [48.6, 5472.0], [48.7, 5478.0], [48.8, 5483.0], [48.9, 5488.0], [49.0, 5491.0], [49.1, 5496.0], [49.2, 5502.0], [49.3, 5507.0], [49.4, 5512.0], [49.5, 5518.0], [49.6, 5524.0], [49.7, 5531.0], [49.8, 5538.0], [49.9, 5541.0], [50.0, 5547.0], [50.1, 5552.0], [50.2, 5557.0], [50.3, 5566.0], [50.4, 5572.0], [50.5, 5578.0], [50.6, 5583.0], [50.7, 5587.0], [50.8, 5594.0], [50.9, 5601.0], [51.0, 5605.0], [51.1, 5611.0], [51.2, 5619.0], [51.3, 5623.0], [51.4, 5629.0], [51.5, 5634.0], [51.6, 5639.0], [51.7, 5645.0], [51.8, 5650.0], [51.9, 5657.0], [52.0, 5663.0], [52.1, 5669.0], [52.2, 5676.0], [52.3, 5681.0], [52.4, 5689.0], [52.5, 5695.0], [52.6, 5700.0], [52.7, 5705.0], [52.8, 5711.0], [52.9, 5716.0], [53.0, 5720.0], [53.1, 5728.0], [53.2, 5735.0], [53.3, 5741.0], [53.4, 5746.0], [53.5, 5752.0], [53.6, 5756.0], [53.7, 5763.0], [53.8, 5769.0], [53.9, 5774.0], [54.0, 5779.0], [54.1, 5784.0], [54.2, 5789.0], [54.3, 5796.0], [54.4, 5801.0], [54.5, 5805.0], [54.6, 5812.0], [54.7, 5818.0], [54.8, 5823.0], [54.9, 5828.0], [55.0, 5833.0], [55.1, 5838.0], [55.2, 5846.0], [55.3, 5852.0], [55.4, 5855.0], [55.5, 5860.0], [55.6, 5867.0], [55.7, 5873.0], [55.8, 5877.0], [55.9, 5883.0], [56.0, 5889.0], [56.1, 5893.0], [56.2, 5898.0], [56.3, 5904.0], [56.4, 5909.0], [56.5, 5913.0], [56.6, 5919.0], [56.7, 5923.0], [56.8, 5928.0], [56.9, 5932.0], [57.0, 5937.0], [57.1, 5944.0], [57.2, 5949.0], [57.3, 5954.0], [57.4, 5960.0], [57.5, 5965.0], [57.6, 5970.0], [57.7, 5975.0], [57.8, 5980.0], [57.9, 5986.0], [58.0, 5990.0], [58.1, 5996.0], [58.2, 5999.0], [58.3, 6004.0], [58.4, 6009.0], [58.5, 6013.0], [58.6, 6019.0], [58.7, 6024.0], [58.8, 6029.0], [58.9, 6033.0], [59.0, 6038.0], [59.1, 6043.0], [59.2, 6048.0], [59.3, 6053.0], [59.4, 6056.0], [59.5, 6063.0], [59.6, 6069.0], [59.7, 6074.0], [59.8, 6080.0], [59.9, 6089.0], [60.0, 6093.0], [60.1, 6099.0], [60.2, 6104.0], [60.3, 6109.0], [60.4, 6113.0], [60.5, 6119.0], [60.6, 6124.0], [60.7, 6130.0], [60.8, 6134.0], [60.9, 6139.0], [61.0, 6143.0], [61.1, 6150.0], [61.2, 6156.0], [61.3, 6162.0], [61.4, 6168.0], [61.5, 6173.0], [61.6, 6178.0], [61.7, 6183.0], [61.8, 6186.0], [61.9, 6195.0], [62.0, 6202.0], [62.1, 6207.0], [62.2, 6212.0], [62.3, 6218.0], [62.4, 6223.0], [62.5, 6228.0], [62.6, 6234.0], [62.7, 6239.0], [62.8, 6243.0], [62.9, 6247.0], [63.0, 6251.0], [63.1, 6257.0], [63.2, 6261.0], [63.3, 6268.0], [63.4, 6275.0], [63.5, 6279.0], [63.6, 6285.0], [63.7, 6291.0], [63.8, 6295.0], [63.9, 6299.0], [64.0, 6305.0], [64.1, 6311.0], [64.2, 6315.0], [64.3, 6319.0], [64.4, 6323.0], [64.5, 6329.0], [64.6, 6333.0], [64.7, 6340.0], [64.8, 6346.0], [64.9, 6352.0], [65.0, 6358.0], [65.1, 6364.0], [65.2, 6370.0], [65.3, 6377.0], [65.4, 6382.0], [65.5, 6386.0], [65.6, 6391.0], [65.7, 6396.0], [65.8, 6401.0], [65.9, 6407.0], [66.0, 6413.0], [66.1, 6418.0], [66.2, 6423.0], [66.3, 6428.0], [66.4, 6433.0], [66.5, 6439.0], [66.6, 6445.0], [66.7, 6452.0], [66.8, 6456.0], [66.9, 6461.0], [67.0, 6467.0], [67.1, 6473.0], [67.2, 6477.0], [67.3, 6482.0], [67.4, 6486.0], [67.5, 6491.0], [67.6, 6497.0], [67.7, 6501.0], [67.8, 6506.0], [67.9, 6512.0], [68.0, 6519.0], [68.1, 6523.0], [68.2, 6530.0], [68.3, 6536.0], [68.4, 6541.0], [68.5, 6545.0], [68.6, 6552.0], [68.7, 6559.0], [68.8, 6563.0], [68.9, 6567.0], [69.0, 6572.0], [69.1, 6579.0], [69.2, 6585.0], [69.3, 6592.0], [69.4, 6597.0], [69.5, 6602.0], [69.6, 6608.0], [69.7, 6612.0], [69.8, 6617.0], [69.9, 6623.0], [70.0, 6627.0], [70.1, 6634.0], [70.2, 6641.0], [70.3, 6647.0], [70.4, 6652.0], [70.5, 6659.0], [70.6, 6664.0], [70.7, 6669.0], [70.8, 6676.0], [70.9, 6681.0], [71.0, 6687.0], [71.1, 6694.0], [71.2, 6702.0], [71.3, 6708.0], [71.4, 6712.0], [71.5, 6716.0], [71.6, 6724.0], [71.7, 6729.0], [71.8, 6736.0], [71.9, 6744.0], [72.0, 6749.0], [72.1, 6755.0], [72.2, 6764.0], [72.3, 6769.0], [72.4, 6776.0], [72.5, 6784.0], [72.6, 6790.0], [72.7, 6797.0], [72.8, 6800.0], [72.9, 6809.0], [73.0, 6814.0], [73.1, 6821.0], [73.2, 6827.0], [73.3, 6834.0], [73.4, 6839.0], [73.5, 6846.0], [73.6, 6850.0], [73.7, 6858.0], [73.8, 6863.0], [73.9, 6869.0], [74.0, 6875.0], [74.1, 6879.0], [74.2, 6885.0], [74.3, 6889.0], [74.4, 6895.0], [74.5, 6902.0], [74.6, 6907.0], [74.7, 6913.0], [74.8, 6920.0], [74.9, 6926.0], [75.0, 6931.0], [75.1, 6937.0], [75.2, 6941.0], [75.3, 6945.0], [75.4, 6951.0], [75.5, 6957.0], [75.6, 6963.0], [75.7, 6969.0], [75.8, 6976.0], [75.9, 6982.0], [76.0, 6986.0], [76.1, 6991.0], [76.2, 6998.0], [76.3, 7003.0], [76.4, 7009.0], [76.5, 7016.0], [76.6, 7021.0], [76.7, 7029.0], [76.8, 7037.0], [76.9, 7045.0], [77.0, 7051.0], [77.1, 7055.0], [77.2, 7061.0], [77.3, 7068.0], [77.4, 7074.0], [77.5, 7081.0], [77.6, 7091.0], [77.7, 7096.0], [77.8, 7101.0], [77.9, 7105.0], [78.0, 7110.0], [78.1, 7114.0], [78.2, 7118.0], [78.3, 7124.0], [78.4, 7131.0], [78.5, 7136.0], [78.6, 7143.0], [78.7, 7151.0], [78.8, 7156.0], [78.9, 7162.0], [79.0, 7173.0], [79.1, 7179.0], [79.2, 7186.0], [79.3, 7193.0], [79.4, 7202.0], [79.5, 7207.0], [79.6, 7213.0], [79.7, 7219.0], [79.8, 7225.0], [79.9, 7234.0], [80.0, 7242.0], [80.1, 7248.0], [80.2, 7254.0], [80.3, 7261.0], [80.4, 7268.0], [80.5, 7277.0], [80.6, 7286.0], [80.7, 7293.0], [80.8, 7301.0], [80.9, 7308.0], [81.0, 7315.0], [81.1, 7320.0], [81.2, 7326.0], [81.3, 7334.0], [81.4, 7342.0], [81.5, 7350.0], [81.6, 7360.0], [81.7, 7367.0], [81.8, 7374.0], [81.9, 7380.0], [82.0, 7388.0], [82.1, 7393.0], [82.2, 7398.0], [82.3, 7406.0], [82.4, 7413.0], [82.5, 7419.0], [82.6, 7425.0], [82.7, 7434.0], [82.8, 7443.0], [82.9, 7451.0], [83.0, 7457.0], [83.1, 7463.0], [83.2, 7471.0], [83.3, 7475.0], [83.4, 7480.0], [83.5, 7486.0], [83.6, 7494.0], [83.7, 7499.0], [83.8, 7505.0], [83.9, 7510.0], [84.0, 7516.0], [84.1, 7523.0], [84.2, 7531.0], [84.3, 7538.0], [84.4, 7543.0], [84.5, 7550.0], [84.6, 7557.0], [84.7, 7561.0], [84.8, 7572.0], [84.9, 7577.0], [85.0, 7583.0], [85.1, 7591.0], [85.2, 7597.0], [85.3, 7606.0], [85.4, 7612.0], [85.5, 7619.0], [85.6, 7626.0], [85.7, 7635.0], [85.8, 7641.0], [85.9, 7650.0], [86.0, 7657.0], [86.1, 7666.0], [86.2, 7674.0], [86.3, 7681.0], [86.4, 7689.0], [86.5, 7694.0], [86.6, 7701.0], [86.7, 7707.0], [86.8, 7715.0], [86.9, 7723.0], [87.0, 7731.0], [87.1, 7740.0], [87.2, 7746.0], [87.3, 7754.0], [87.4, 7761.0], [87.5, 7769.0], [87.6, 7779.0], [87.7, 7787.0], [87.8, 7795.0], [87.9, 7803.0], [88.0, 7814.0], [88.1, 7820.0], [88.2, 7828.0], [88.3, 7837.0], [88.4, 7844.0], [88.5, 7855.0], [88.6, 7864.0], [88.7, 7874.0], [88.8, 7881.0], [88.9, 7892.0], [89.0, 7900.0], [89.1, 7908.0], [89.2, 7916.0], [89.3, 7922.0], [89.4, 7932.0], [89.5, 7940.0], [89.6, 7949.0], [89.7, 7958.0], [89.8, 7965.0], [89.9, 7974.0], [90.0, 7981.0], [90.1, 7991.0], [90.2, 7999.0], [90.3, 8010.0], [90.4, 8019.0], [90.5, 8030.0], [90.6, 8036.0], [90.7, 8050.0], [90.8, 8059.0], [90.9, 8067.0], [91.0, 8079.0], [91.1, 8087.0], [91.2, 8093.0], [91.3, 8104.0], [91.4, 8114.0], [91.5, 8121.0], [91.6, 8128.0], [91.7, 8138.0], [91.8, 8146.0], [91.9, 8156.0], [92.0, 8165.0], [92.1, 8176.0], [92.2, 8184.0], [92.3, 8193.0], [92.4, 8206.0], [92.5, 8218.0], [92.6, 8229.0], [92.7, 8238.0], [92.8, 8250.0], [92.9, 8261.0], [93.0, 8271.0], [93.1, 8282.0], [93.2, 8292.0], [93.3, 8304.0], [93.4, 8315.0], [93.5, 8322.0], [93.6, 8329.0], [93.7, 8344.0], [93.8, 8355.0], [93.9, 8367.0], [94.0, 8375.0], [94.1, 8384.0], [94.2, 8394.0], [94.3, 8407.0], [94.4, 8419.0], [94.5, 8436.0], [94.6, 8446.0], [94.7, 8457.0], [94.8, 8469.0], [94.9, 8477.0], [95.0, 8490.0], [95.1, 8504.0], [95.2, 8516.0], [95.3, 8528.0], [95.4, 8538.0], [95.5, 8547.0], [95.6, 8562.0], [95.7, 8578.0], [95.8, 8590.0], [95.9, 8606.0], [96.0, 8619.0], [96.1, 8633.0], [96.2, 8649.0], [96.3, 8666.0], [96.4, 8675.0], [96.5, 8685.0], [96.6, 8703.0], [96.7, 8713.0], [96.8, 8729.0], [96.9, 8745.0], [97.0, 8759.0], [97.1, 8780.0], [97.2, 8795.0], [97.3, 8805.0], [97.4, 8828.0], [97.5, 8850.0], [97.6, 8860.0], [97.7, 8877.0], [97.8, 8894.0], [97.9, 8918.0], [98.0, 8932.0], [98.1, 8947.0], [98.2, 8968.0], [98.3, 8993.0], [98.4, 9020.0], [98.5, 9042.0], [98.6, 9055.0], [98.7, 9077.0], [98.8, 9106.0], [98.9, 9139.0], [99.0, 9176.0], [99.1, 9202.0], [99.2, 9230.0], [99.3, 9273.0], [99.4, 9317.0], [99.5, 9366.0], [99.6, 9409.0], [99.7, 9481.0], [99.8, 9556.0], [99.9, 9699.0], [100.0, 10266.0]], "isOverall": false, "label": "Sitemap Request", "isController": false}, {"data": [[0.0, 52.0], [0.1, 56.0], [0.2, 57.0], [0.3, 59.0], [0.4, 60.0], [0.5, 60.0], [0.6, 61.0], [0.7, 61.0], [0.8, 62.0], [0.9, 62.0], [1.0, 63.0], [1.1, 64.0], [1.2, 64.0], [1.3, 65.0], [1.4, 65.0], [1.5, 66.0], [1.6, 66.0], [1.7, 67.0], [1.8, 67.0], [1.9, 68.0], [2.0, 68.0], [2.1, 69.0], [2.2, 69.0], [2.3, 70.0], [2.4, 70.0], [2.5, 71.0], [2.6, 71.0], [2.7, 72.0], [2.8, 72.0], [2.9, 73.0], [3.0, 73.0], [3.1, 74.0], [3.2, 74.0], [3.3, 75.0], [3.4, 75.0], [3.5, 75.0], [3.6, 76.0], [3.7, 76.0], [3.8, 77.0], [3.9, 77.0], [4.0, 77.0], [4.1, 78.0], [4.2, 78.0], [4.3, 78.0], [4.4, 79.0], [4.5, 79.0], [4.6, 80.0], [4.7, 80.0], [4.8, 80.0], [4.9, 81.0], [5.0, 81.0], [5.1, 81.0], [5.2, 82.0], [5.3, 82.0], [5.4, 82.0], [5.5, 83.0], [5.6, 83.0], [5.7, 83.0], [5.8, 84.0], [5.9, 84.0], [6.0, 84.0], [6.1, 84.0], [6.2, 85.0], [6.3, 85.0], [6.4, 85.0], [6.5, 85.0], [6.6, 86.0], [6.7, 86.0], [6.8, 86.0], [6.9, 87.0], [7.0, 87.0], [7.1, 87.0], [7.2, 87.0], [7.3, 88.0], [7.4, 88.0], [7.5, 88.0], [7.6, 89.0], [7.7, 89.0], [7.8, 89.0], [7.9, 90.0], [8.0, 90.0], [8.1, 90.0], [8.2, 91.0], [8.3, 91.0], [8.4, 91.0], [8.5, 92.0], [8.6, 92.0], [8.7, 92.0], [8.8, 93.0], [8.9, 93.0], [9.0, 93.0], [9.1, 94.0], [9.2, 94.0], [9.3, 94.0], [9.4, 94.0], [9.5, 95.0], [9.6, 95.0], [9.7, 95.0], [9.8, 96.0], [9.9, 96.0], [10.0, 96.0], [10.1, 96.0], [10.2, 97.0], [10.3, 97.0], [10.4, 97.0], [10.5, 98.0], [10.6, 98.0], [10.7, 98.0], [10.8, 98.0], [10.9, 99.0], [11.0, 99.0], [11.1, 99.0], [11.2, 99.0], [11.3, 100.0], [11.4, 100.0], [11.5, 101.0], [11.6, 101.0], [11.7, 101.0], [11.8, 101.0], [11.9, 102.0], [12.0, 102.0], [12.1, 102.0], [12.2, 102.0], [12.3, 103.0], [12.4, 103.0], [12.5, 103.0], [12.6, 103.0], [12.7, 104.0], [12.8, 104.0], [12.9, 104.0], [13.0, 104.0], [13.1, 105.0], [13.2, 105.0], [13.3, 105.0], [13.4, 105.0], [13.5, 105.0], [13.6, 106.0], [13.7, 106.0], [13.8, 106.0], [13.9, 106.0], [14.0, 107.0], [14.1, 107.0], [14.2, 107.0], [14.3, 107.0], [14.4, 108.0], [14.5, 108.0], [14.6, 108.0], [14.7, 108.0], [14.8, 109.0], [14.9, 109.0], [15.0, 109.0], [15.1, 110.0], [15.2, 110.0], [15.3, 110.0], [15.4, 110.0], [15.5, 110.0], [15.6, 111.0], [15.7, 111.0], [15.8, 111.0], [15.9, 112.0], [16.0, 112.0], [16.1, 112.0], [16.2, 112.0], [16.3, 112.0], [16.4, 113.0], [16.5, 113.0], [16.6, 113.0], [16.7, 113.0], [16.8, 113.0], [16.9, 114.0], [17.0, 114.0], [17.1, 114.0], [17.2, 114.0], [17.3, 114.0], [17.4, 115.0], [17.5, 115.0], [17.6, 115.0], [17.7, 115.0], [17.8, 115.0], [17.9, 116.0], [18.0, 116.0], [18.1, 116.0], [18.2, 117.0], [18.3, 117.0], [18.4, 117.0], [18.5, 117.0], [18.6, 117.0], [18.7, 118.0], [18.8, 118.0], [18.9, 118.0], [19.0, 118.0], [19.1, 118.0], [19.2, 119.0], [19.3, 119.0], [19.4, 119.0], [19.5, 119.0], [19.6, 120.0], [19.7, 120.0], [19.8, 120.0], [19.9, 121.0], [20.0, 121.0], [20.1, 121.0], [20.2, 121.0], [20.3, 121.0], [20.4, 122.0], [20.5, 122.0], [20.6, 122.0], [20.7, 122.0], [20.8, 122.0], [20.9, 123.0], [21.0, 123.0], [21.1, 123.0], [21.2, 123.0], [21.3, 123.0], [21.4, 123.0], [21.5, 124.0], [21.6, 124.0], [21.7, 124.0], [21.8, 124.0], [21.9, 125.0], [22.0, 125.0], [22.1, 125.0], [22.2, 125.0], [22.3, 125.0], [22.4, 126.0], [22.5, 126.0], [22.6, 126.0], [22.7, 126.0], [22.8, 126.0], [22.9, 127.0], [23.0, 127.0], [23.1, 127.0], [23.2, 127.0], [23.3, 127.0], [23.4, 127.0], [23.5, 128.0], [23.6, 128.0], [23.7, 128.0], [23.8, 128.0], [23.9, 129.0], [24.0, 129.0], [24.1, 129.0], [24.2, 129.0], [24.3, 129.0], [24.4, 129.0], [24.5, 130.0], [24.6, 130.0], [24.7, 130.0], [24.8, 130.0], [24.9, 130.0], [25.0, 130.0], [25.1, 131.0], [25.2, 131.0], [25.3, 131.0], [25.4, 131.0], [25.5, 131.0], [25.6, 132.0], [25.7, 132.0], [25.8, 132.0], [25.9, 132.0], [26.0, 132.0], [26.1, 132.0], [26.2, 133.0], [26.3, 133.0], [26.4, 133.0], [26.5, 133.0], [26.6, 133.0], [26.7, 134.0], [26.8, 134.0], [26.9, 134.0], [27.0, 134.0], [27.1, 134.0], [27.2, 134.0], [27.3, 135.0], [27.4, 135.0], [27.5, 135.0], [27.6, 135.0], [27.7, 135.0], [27.8, 135.0], [27.9, 136.0], [28.0, 136.0], [28.1, 136.0], [28.2, 136.0], [28.3, 136.0], [28.4, 136.0], [28.5, 137.0], [28.6, 137.0], [28.7, 137.0], [28.8, 137.0], [28.9, 137.0], [29.0, 138.0], [29.1, 138.0], [29.2, 138.0], [29.3, 138.0], [29.4, 138.0], [29.5, 138.0], [29.6, 139.0], [29.7, 139.0], [29.8, 139.0], [29.9, 139.0], [30.0, 139.0], [30.1, 139.0], [30.2, 140.0], [30.3, 140.0], [30.4, 140.0], [30.5, 140.0], [30.6, 140.0], [30.7, 140.0], [30.8, 140.0], [30.9, 141.0], [31.0, 141.0], [31.1, 141.0], [31.2, 141.0], [31.3, 141.0], [31.4, 141.0], [31.5, 142.0], [31.6, 142.0], [31.7, 142.0], [31.8, 142.0], [31.9, 142.0], [32.0, 143.0], [32.1, 143.0], [32.2, 143.0], [32.3, 143.0], [32.4, 143.0], [32.5, 143.0], [32.6, 144.0], [32.7, 144.0], [32.8, 144.0], [32.9, 144.0], [33.0, 144.0], [33.1, 144.0], [33.2, 144.0], [33.3, 145.0], [33.4, 145.0], [33.5, 145.0], [33.6, 145.0], [33.7, 145.0], [33.8, 145.0], [33.9, 146.0], [34.0, 146.0], [34.1, 146.0], [34.2, 146.0], [34.3, 146.0], [34.4, 146.0], [34.5, 146.0], [34.6, 147.0], [34.7, 147.0], [34.8, 147.0], [34.9, 147.0], [35.0, 147.0], [35.1, 147.0], [35.2, 148.0], [35.3, 148.0], [35.4, 148.0], [35.5, 148.0], [35.6, 148.0], [35.7, 148.0], [35.8, 148.0], [35.9, 149.0], [36.0, 149.0], [36.1, 149.0], [36.2, 149.0], [36.3, 149.0], [36.4, 149.0], [36.5, 150.0], [36.6, 150.0], [36.7, 150.0], [36.8, 150.0], [36.9, 150.0], [37.0, 150.0], [37.1, 151.0], [37.2, 151.0], [37.3, 151.0], [37.4, 151.0], [37.5, 151.0], [37.6, 151.0], [37.7, 152.0], [37.8, 152.0], [37.9, 152.0], [38.0, 152.0], [38.1, 152.0], [38.2, 152.0], [38.3, 152.0], [38.4, 153.0], [38.5, 153.0], [38.6, 153.0], [38.7, 153.0], [38.8, 153.0], [38.9, 154.0], [39.0, 154.0], [39.1, 154.0], [39.2, 154.0], [39.3, 154.0], [39.4, 154.0], [39.5, 154.0], [39.6, 155.0], [39.7, 155.0], [39.8, 155.0], [39.9, 155.0], [40.0, 155.0], [40.1, 155.0], [40.2, 156.0], [40.3, 156.0], [40.4, 156.0], [40.5, 156.0], [40.6, 156.0], [40.7, 156.0], [40.8, 156.0], [40.9, 157.0], [41.0, 157.0], [41.1, 157.0], [41.2, 157.0], [41.3, 157.0], [41.4, 157.0], [41.5, 158.0], [41.6, 158.0], [41.7, 158.0], [41.8, 158.0], [41.9, 158.0], [42.0, 158.0], [42.1, 159.0], [42.2, 159.0], [42.3, 159.0], [42.4, 159.0], [42.5, 159.0], [42.6, 159.0], [42.7, 160.0], [42.8, 160.0], [42.9, 160.0], [43.0, 160.0], [43.1, 160.0], [43.2, 160.0], [43.3, 160.0], [43.4, 161.0], [43.5, 161.0], [43.6, 161.0], [43.7, 161.0], [43.8, 161.0], [43.9, 161.0], [44.0, 161.0], [44.1, 162.0], [44.2, 162.0], [44.3, 162.0], [44.4, 162.0], [44.5, 162.0], [44.6, 162.0], [44.7, 163.0], [44.8, 163.0], [44.9, 163.0], [45.0, 163.0], [45.1, 163.0], [45.2, 163.0], [45.3, 163.0], [45.4, 164.0], [45.5, 164.0], [45.6, 164.0], [45.7, 164.0], [45.8, 164.0], [45.9, 164.0], [46.0, 164.0], [46.1, 164.0], [46.2, 165.0], [46.3, 165.0], [46.4, 165.0], [46.5, 165.0], [46.6, 165.0], [46.7, 165.0], [46.8, 166.0], [46.9, 166.0], [47.0, 166.0], [47.1, 166.0], [47.2, 166.0], [47.3, 166.0], [47.4, 167.0], [47.5, 167.0], [47.6, 167.0], [47.7, 167.0], [47.8, 167.0], [47.9, 167.0], [48.0, 167.0], [48.1, 168.0], [48.2, 168.0], [48.3, 168.0], [48.4, 168.0], [48.5, 168.0], [48.6, 168.0], [48.7, 169.0], [48.8, 169.0], [48.9, 169.0], [49.0, 169.0], [49.1, 169.0], [49.2, 169.0], [49.3, 170.0], [49.4, 170.0], [49.5, 170.0], [49.6, 170.0], [49.7, 170.0], [49.8, 170.0], [49.9, 171.0], [50.0, 171.0], [50.1, 171.0], [50.2, 171.0], [50.3, 171.0], [50.4, 171.0], [50.5, 171.0], [50.6, 172.0], [50.7, 172.0], [50.8, 172.0], [50.9, 172.0], [51.0, 172.0], [51.1, 172.0], [51.2, 173.0], [51.3, 173.0], [51.4, 173.0], [51.5, 173.0], [51.6, 173.0], [51.7, 173.0], [51.8, 173.0], [51.9, 174.0], [52.0, 174.0], [52.1, 174.0], [52.2, 174.0], [52.3, 174.0], [52.4, 174.0], [52.5, 175.0], [52.6, 175.0], [52.7, 175.0], [52.8, 175.0], [52.9, 175.0], [53.0, 175.0], [53.1, 176.0], [53.2, 176.0], [53.3, 176.0], [53.4, 176.0], [53.5, 176.0], [53.6, 176.0], [53.7, 176.0], [53.8, 177.0], [53.9, 177.0], [54.0, 177.0], [54.1, 177.0], [54.2, 177.0], [54.3, 177.0], [54.4, 178.0], [54.5, 178.0], [54.6, 178.0], [54.7, 178.0], [54.8, 178.0], [54.9, 178.0], [55.0, 178.0], [55.1, 179.0], [55.2, 179.0], [55.3, 179.0], [55.4, 179.0], [55.5, 179.0], [55.6, 179.0], [55.7, 180.0], [55.8, 180.0], [55.9, 180.0], [56.0, 180.0], [56.1, 180.0], [56.2, 180.0], [56.3, 180.0], [56.4, 180.0], [56.5, 181.0], [56.6, 181.0], [56.7, 181.0], [56.8, 181.0], [56.9, 181.0], [57.0, 181.0], [57.1, 182.0], [57.2, 182.0], [57.3, 182.0], [57.4, 182.0], [57.5, 182.0], [57.6, 182.0], [57.7, 183.0], [57.8, 183.0], [57.9, 183.0], [58.0, 183.0], [58.1, 183.0], [58.2, 183.0], [58.3, 184.0], [58.4, 184.0], [58.5, 184.0], [58.6, 184.0], [58.7, 184.0], [58.8, 184.0], [58.9, 185.0], [59.0, 185.0], [59.1, 185.0], [59.2, 185.0], [59.3, 185.0], [59.4, 185.0], [59.5, 185.0], [59.6, 186.0], [59.7, 186.0], [59.8, 186.0], [59.9, 186.0], [60.0, 186.0], [60.1, 186.0], [60.2, 186.0], [60.3, 187.0], [60.4, 187.0], [60.5, 187.0], [60.6, 187.0], [60.7, 187.0], [60.8, 187.0], [60.9, 188.0], [61.0, 188.0], [61.1, 188.0], [61.2, 188.0], [61.3, 188.0], [61.4, 188.0], [61.5, 189.0], [61.6, 189.0], [61.7, 189.0], [61.8, 189.0], [61.9, 189.0], [62.0, 190.0], [62.1, 190.0], [62.2, 190.0], [62.3, 190.0], [62.4, 190.0], [62.5, 190.0], [62.6, 191.0], [62.7, 191.0], [62.8, 191.0], [62.9, 191.0], [63.0, 191.0], [63.1, 191.0], [63.2, 192.0], [63.3, 192.0], [63.4, 192.0], [63.5, 192.0], [63.6, 192.0], [63.7, 192.0], [63.8, 193.0], [63.9, 193.0], [64.0, 193.0], [64.1, 193.0], [64.2, 193.0], [64.3, 193.0], [64.4, 193.0], [64.5, 194.0], [64.6, 194.0], [64.7, 194.0], [64.8, 194.0], [64.9, 194.0], [65.0, 195.0], [65.1, 195.0], [65.2, 195.0], [65.3, 195.0], [65.4, 195.0], [65.5, 195.0], [65.6, 196.0], [65.7, 196.0], [65.8, 196.0], [65.9, 196.0], [66.0, 196.0], [66.1, 196.0], [66.2, 197.0], [66.3, 197.0], [66.4, 197.0], [66.5, 197.0], [66.6, 197.0], [66.7, 197.0], [66.8, 198.0], [66.9, 198.0], [67.0, 198.0], [67.1, 198.0], [67.2, 199.0], [67.3, 199.0], [67.4, 199.0], [67.5, 199.0], [67.6, 199.0], [67.7, 199.0], [67.8, 200.0], [67.9, 200.0], [68.0, 200.0], [68.1, 200.0], [68.2, 200.0], [68.3, 201.0], [68.4, 201.0], [68.5, 201.0], [68.6, 201.0], [68.7, 201.0], [68.8, 201.0], [68.9, 202.0], [69.0, 202.0], [69.1, 202.0], [69.2, 202.0], [69.3, 202.0], [69.4, 203.0], [69.5, 203.0], [69.6, 203.0], [69.7, 203.0], [69.8, 203.0], [69.9, 204.0], [70.0, 204.0], [70.1, 204.0], [70.2, 204.0], [70.3, 205.0], [70.4, 205.0], [70.5, 205.0], [70.6, 205.0], [70.7, 205.0], [70.8, 205.0], [70.9, 206.0], [71.0, 206.0], [71.1, 206.0], [71.2, 206.0], [71.3, 206.0], [71.4, 207.0], [71.5, 207.0], [71.6, 207.0], [71.7, 207.0], [71.8, 207.0], [71.9, 208.0], [72.0, 208.0], [72.1, 208.0], [72.2, 208.0], [72.3, 208.0], [72.4, 209.0], [72.5, 209.0], [72.6, 209.0], [72.7, 209.0], [72.8, 210.0], [72.9, 210.0], [73.0, 210.0], [73.1, 210.0], [73.2, 211.0], [73.3, 211.0], [73.4, 211.0], [73.5, 211.0], [73.6, 211.0], [73.7, 212.0], [73.8, 212.0], [73.9, 212.0], [74.0, 212.0], [74.1, 213.0], [74.2, 213.0], [74.3, 213.0], [74.4, 213.0], [74.5, 214.0], [74.6, 214.0], [74.7, 214.0], [74.8, 214.0], [74.9, 214.0], [75.0, 215.0], [75.1, 215.0], [75.2, 215.0], [75.3, 215.0], [75.4, 216.0], [75.5, 216.0], [75.6, 216.0], [75.7, 216.0], [75.8, 217.0], [75.9, 217.0], [76.0, 217.0], [76.1, 218.0], [76.2, 218.0], [76.3, 218.0], [76.4, 218.0], [76.5, 218.0], [76.6, 219.0], [76.7, 219.0], [76.8, 219.0], [76.9, 219.0], [77.0, 220.0], [77.1, 220.0], [77.2, 220.0], [77.3, 221.0], [77.4, 221.0], [77.5, 221.0], [77.6, 222.0], [77.7, 222.0], [77.8, 222.0], [77.9, 223.0], [78.0, 223.0], [78.1, 223.0], [78.2, 223.0], [78.3, 224.0], [78.4, 224.0], [78.5, 224.0], [78.6, 224.0], [78.7, 225.0], [78.8, 225.0], [78.9, 225.0], [79.0, 226.0], [79.1, 226.0], [79.2, 226.0], [79.3, 226.0], [79.4, 227.0], [79.5, 227.0], [79.6, 227.0], [79.7, 228.0], [79.8, 228.0], [79.9, 228.0], [80.0, 229.0], [80.1, 229.0], [80.2, 229.0], [80.3, 230.0], [80.4, 230.0], [80.5, 230.0], [80.6, 231.0], [80.7, 231.0], [80.8, 231.0], [80.9, 232.0], [81.0, 232.0], [81.1, 232.0], [81.2, 233.0], [81.3, 233.0], [81.4, 233.0], [81.5, 234.0], [81.6, 234.0], [81.7, 235.0], [81.8, 235.0], [81.9, 235.0], [82.0, 236.0], [82.1, 236.0], [82.2, 237.0], [82.3, 237.0], [82.4, 237.0], [82.5, 238.0], [82.6, 238.0], [82.7, 238.0], [82.8, 239.0], [82.9, 239.0], [83.0, 239.0], [83.1, 240.0], [83.2, 240.0], [83.3, 241.0], [83.4, 241.0], [83.5, 241.0], [83.6, 242.0], [83.7, 242.0], [83.8, 243.0], [83.9, 243.0], [84.0, 244.0], [84.1, 244.0], [84.2, 245.0], [84.3, 245.0], [84.4, 246.0], [84.5, 246.0], [84.6, 246.0], [84.7, 247.0], [84.8, 247.0], [84.9, 248.0], [85.0, 248.0], [85.1, 249.0], [85.2, 249.0], [85.3, 250.0], [85.4, 250.0], [85.5, 251.0], [85.6, 251.0], [85.7, 252.0], [85.8, 252.0], [85.9, 253.0], [86.0, 253.0], [86.1, 253.0], [86.2, 254.0], [86.3, 254.0], [86.4, 255.0], [86.5, 255.0], [86.6, 256.0], [86.7, 256.0], [86.8, 257.0], [86.9, 257.0], [87.0, 258.0], [87.1, 259.0], [87.2, 259.0], [87.3, 260.0], [87.4, 261.0], [87.5, 261.0], [87.6, 262.0], [87.7, 262.0], [87.8, 263.0], [87.9, 264.0], [88.0, 264.0], [88.1, 265.0], [88.2, 265.0], [88.3, 266.0], [88.4, 267.0], [88.5, 268.0], [88.6, 268.0], [88.7, 269.0], [88.8, 269.0], [88.9, 270.0], [89.0, 271.0], [89.1, 272.0], [89.2, 272.0], [89.3, 273.0], [89.4, 274.0], [89.5, 275.0], [89.6, 276.0], [89.7, 277.0], [89.8, 277.0], [89.9, 278.0], [90.0, 279.0], [90.1, 280.0], [90.2, 281.0], [90.3, 281.0], [90.4, 282.0], [90.5, 283.0], [90.6, 284.0], [90.7, 285.0], [90.8, 286.0], [90.9, 287.0], [91.0, 288.0], [91.1, 289.0], [91.2, 290.0], [91.3, 291.0], [91.4, 293.0], [91.5, 294.0], [91.6, 295.0], [91.7, 297.0], [91.8, 298.0], [91.9, 300.0], [92.0, 301.0], [92.1, 302.0], [92.2, 303.0], [92.3, 304.0], [92.4, 305.0], [92.5, 307.0], [92.6, 308.0], [92.7, 310.0], [92.8, 312.0], [92.9, 313.0], [93.0, 316.0], [93.1, 319.0], [93.2, 321.0], [93.3, 324.0], [93.4, 326.0], [93.5, 329.0], [93.6, 331.0], [93.7, 334.0], [93.8, 337.0], [93.9, 340.0], [94.0, 344.0], [94.1, 346.0], [94.2, 348.0], [94.3, 351.0], [94.4, 356.0], [94.5, 359.0], [94.6, 363.0], [94.7, 367.0], [94.8, 372.0], [94.9, 378.0], [95.0, 386.0], [95.1, 392.0], [95.2, 399.0], [95.3, 405.0], [95.4, 413.0], [95.5, 419.0], [95.6, 428.0], [95.7, 436.0], [95.8, 446.0], [95.9, 458.0], [96.0, 479.0], [96.1, 499.0], [96.2, 518.0], [96.3, 533.0], [96.4, 566.0], [96.5, 592.0], [96.6, 620.0], [96.7, 651.0], [96.8, 678.0], [96.9, 716.0], [97.0, 763.0], [97.1, 792.0], [97.2, 855.0], [97.3, 905.0], [97.4, 954.0], [97.5, 1000.0], [97.6, 1045.0], [97.7, 1079.0], [97.8, 1103.0], [97.9, 1126.0], [98.0, 1141.0], [98.1, 1170.0], [98.2, 1186.0], [98.3, 1202.0], [98.4, 1227.0], [98.5, 1255.0], [98.6, 1284.0], [98.7, 1320.0], [98.8, 1372.0], [98.9, 1434.0], [99.0, 1475.0], [99.1, 1558.0], [99.2, 1631.0], [99.3, 1717.0], [99.4, 1844.0], [99.5, 1976.0], [99.6, 2068.0], [99.7, 2153.0], [99.8, 2284.0], [99.9, 2720.0], [100.0, 3872.0]], "isOverall": false, "label": "Single Keyword Request", "isController": false}, {"data": [[0.0, 30.0], [0.1, 39.0], [0.2, 41.0], [0.3, 43.0], [0.4, 45.0], [0.5, 47.0], [0.6, 48.0], [0.7, 48.0], [0.8, 49.0], [0.9, 50.0], [1.0, 51.0], [1.1, 52.0], [1.2, 52.0], [1.3, 53.0], [1.4, 54.0], [1.5, 54.0], [1.6, 55.0], [1.7, 56.0], [1.8, 56.0], [1.9, 57.0], [2.0, 58.0], [2.1, 58.0], [2.2, 59.0], [2.3, 59.0], [2.4, 60.0], [2.5, 60.0], [2.6, 60.0], [2.7, 61.0], [2.8, 61.0], [2.9, 62.0], [3.0, 62.0], [3.1, 63.0], [3.2, 63.0], [3.3, 64.0], [3.4, 64.0], [3.5, 64.0], [3.6, 65.0], [3.7, 65.0], [3.8, 66.0], [3.9, 66.0], [4.0, 67.0], [4.1, 67.0], [4.2, 67.0], [4.3, 68.0], [4.4, 68.0], [4.5, 69.0], [4.6, 69.0], [4.7, 69.0], [4.8, 70.0], [4.9, 70.0], [5.0, 70.0], [5.1, 71.0], [5.2, 71.0], [5.3, 72.0], [5.4, 72.0], [5.5, 72.0], [5.6, 73.0], [5.7, 73.0], [5.8, 73.0], [5.9, 74.0], [6.0, 74.0], [6.1, 74.0], [6.2, 75.0], [6.3, 75.0], [6.4, 75.0], [6.5, 75.0], [6.6, 76.0], [6.7, 76.0], [6.8, 76.0], [6.9, 77.0], [7.0, 77.0], [7.1, 78.0], [7.2, 78.0], [7.3, 78.0], [7.4, 79.0], [7.5, 79.0], [7.6, 79.0], [7.7, 79.0], [7.8, 80.0], [7.9, 80.0], [8.0, 80.0], [8.1, 81.0], [8.2, 81.0], [8.3, 82.0], [8.4, 82.0], [8.5, 82.0], [8.6, 83.0], [8.7, 83.0], [8.8, 83.0], [8.9, 84.0], [9.0, 84.0], [9.1, 84.0], [9.2, 85.0], [9.3, 85.0], [9.4, 86.0], [9.5, 86.0], [9.6, 86.0], [9.7, 87.0], [9.8, 87.0], [9.9, 87.0], [10.0, 88.0], [10.1, 88.0], [10.2, 88.0], [10.3, 89.0], [10.4, 89.0], [10.5, 89.0], [10.6, 90.0], [10.7, 90.0], [10.8, 90.0], [10.9, 91.0], [11.0, 91.0], [11.1, 91.0], [11.2, 92.0], [11.3, 92.0], [11.4, 92.0], [11.5, 93.0], [11.6, 93.0], [11.7, 94.0], [11.8, 94.0], [11.9, 94.0], [12.0, 94.0], [12.1, 95.0], [12.2, 95.0], [12.3, 96.0], [12.4, 96.0], [12.5, 96.0], [12.6, 97.0], [12.7, 97.0], [12.8, 97.0], [12.9, 98.0], [13.0, 98.0], [13.1, 98.0], [13.2, 99.0], [13.3, 99.0], [13.4, 99.0], [13.5, 99.0], [13.6, 100.0], [13.7, 100.0], [13.8, 100.0], [13.9, 101.0], [14.0, 101.0], [14.1, 101.0], [14.2, 102.0], [14.3, 102.0], [14.4, 102.0], [14.5, 103.0], [14.6, 103.0], [14.7, 103.0], [14.8, 104.0], [14.9, 104.0], [15.0, 104.0], [15.1, 105.0], [15.2, 105.0], [15.3, 105.0], [15.4, 106.0], [15.5, 106.0], [15.6, 106.0], [15.7, 106.0], [15.8, 107.0], [15.9, 107.0], [16.0, 107.0], [16.1, 108.0], [16.2, 108.0], [16.3, 108.0], [16.4, 109.0], [16.5, 109.0], [16.6, 109.0], [16.7, 110.0], [16.8, 110.0], [16.9, 110.0], [17.0, 110.0], [17.1, 111.0], [17.2, 111.0], [17.3, 111.0], [17.4, 112.0], [17.5, 112.0], [17.6, 112.0], [17.7, 112.0], [17.8, 113.0], [17.9, 113.0], [18.0, 113.0], [18.1, 113.0], [18.2, 114.0], [18.3, 114.0], [18.4, 115.0], [18.5, 115.0], [18.6, 115.0], [18.7, 116.0], [18.8, 116.0], [18.9, 116.0], [19.0, 117.0], [19.1, 117.0], [19.2, 117.0], [19.3, 118.0], [19.4, 118.0], [19.5, 118.0], [19.6, 118.0], [19.7, 119.0], [19.8, 119.0], [19.9, 119.0], [20.0, 120.0], [20.1, 120.0], [20.2, 120.0], [20.3, 120.0], [20.4, 121.0], [20.5, 121.0], [20.6, 121.0], [20.7, 122.0], [20.8, 122.0], [20.9, 122.0], [21.0, 123.0], [21.1, 123.0], [21.2, 123.0], [21.3, 124.0], [21.4, 124.0], [21.5, 124.0], [21.6, 125.0], [21.7, 125.0], [21.8, 125.0], [21.9, 125.0], [22.0, 126.0], [22.1, 126.0], [22.2, 127.0], [22.3, 127.0], [22.4, 127.0], [22.5, 128.0], [22.6, 128.0], [22.7, 128.0], [22.8, 129.0], [22.9, 129.0], [23.0, 129.0], [23.1, 130.0], [23.2, 130.0], [23.3, 130.0], [23.4, 131.0], [23.5, 131.0], [23.6, 131.0], [23.7, 132.0], [23.8, 132.0], [23.9, 133.0], [24.0, 133.0], [24.1, 133.0], [24.2, 134.0], [24.3, 134.0], [24.4, 134.0], [24.5, 135.0], [24.6, 135.0], [24.7, 135.0], [24.8, 135.0], [24.9, 136.0], [25.0, 136.0], [25.1, 136.0], [25.2, 137.0], [25.3, 137.0], [25.4, 137.0], [25.5, 138.0], [25.6, 138.0], [25.7, 139.0], [25.8, 139.0], [25.9, 139.0], [26.0, 140.0], [26.1, 140.0], [26.2, 140.0], [26.3, 141.0], [26.4, 141.0], [26.5, 141.0], [26.6, 141.0], [26.7, 142.0], [26.8, 142.0], [26.9, 143.0], [27.0, 143.0], [27.1, 143.0], [27.2, 144.0], [27.3, 144.0], [27.4, 144.0], [27.5, 145.0], [27.6, 145.0], [27.7, 145.0], [27.8, 146.0], [27.9, 146.0], [28.0, 147.0], [28.1, 147.0], [28.2, 147.0], [28.3, 148.0], [28.4, 148.0], [28.5, 148.0], [28.6, 149.0], [28.7, 149.0], [28.8, 149.0], [28.9, 150.0], [29.0, 150.0], [29.1, 150.0], [29.2, 151.0], [29.3, 151.0], [29.4, 151.0], [29.5, 152.0], [29.6, 152.0], [29.7, 153.0], [29.8, 153.0], [29.9, 153.0], [30.0, 154.0], [30.1, 154.0], [30.2, 154.0], [30.3, 155.0], [30.4, 155.0], [30.5, 155.0], [30.6, 156.0], [30.7, 156.0], [30.8, 156.0], [30.9, 157.0], [31.0, 157.0], [31.1, 157.0], [31.2, 158.0], [31.3, 158.0], [31.4, 159.0], [31.5, 159.0], [31.6, 159.0], [31.7, 160.0], [31.8, 160.0], [31.9, 161.0], [32.0, 161.0], [32.1, 161.0], [32.2, 162.0], [32.3, 162.0], [32.4, 163.0], [32.5, 163.0], [32.6, 163.0], [32.7, 164.0], [32.8, 164.0], [32.9, 165.0], [33.0, 165.0], [33.1, 165.0], [33.2, 166.0], [33.3, 166.0], [33.4, 167.0], [33.5, 167.0], [33.6, 167.0], [33.7, 168.0], [33.8, 168.0], [33.9, 168.0], [34.0, 169.0], [34.1, 169.0], [34.2, 170.0], [34.3, 170.0], [34.4, 170.0], [34.5, 171.0], [34.6, 171.0], [34.7, 172.0], [34.8, 172.0], [34.9, 172.0], [35.0, 173.0], [35.1, 173.0], [35.2, 174.0], [35.3, 174.0], [35.4, 174.0], [35.5, 175.0], [35.6, 175.0], [35.7, 176.0], [35.8, 176.0], [35.9, 177.0], [36.0, 177.0], [36.1, 177.0], [36.2, 178.0], [36.3, 178.0], [36.4, 179.0], [36.5, 179.0], [36.6, 179.0], [36.7, 180.0], [36.8, 180.0], [36.9, 181.0], [37.0, 181.0], [37.1, 182.0], [37.2, 182.0], [37.3, 182.0], [37.4, 183.0], [37.5, 183.0], [37.6, 183.0], [37.7, 184.0], [37.8, 184.0], [37.9, 185.0], [38.0, 185.0], [38.1, 185.0], [38.2, 186.0], [38.3, 186.0], [38.4, 186.0], [38.5, 187.0], [38.6, 187.0], [38.7, 188.0], [38.8, 188.0], [38.9, 188.0], [39.0, 189.0], [39.1, 189.0], [39.2, 190.0], [39.3, 190.0], [39.4, 191.0], [39.5, 191.0], [39.6, 191.0], [39.7, 192.0], [39.8, 192.0], [39.9, 192.0], [40.0, 193.0], [40.1, 193.0], [40.2, 194.0], [40.3, 194.0], [40.4, 195.0], [40.5, 195.0], [40.6, 196.0], [40.7, 196.0], [40.8, 196.0], [40.9, 197.0], [41.0, 197.0], [41.1, 197.0], [41.2, 198.0], [41.3, 198.0], [41.4, 199.0], [41.5, 199.0], [41.6, 200.0], [41.7, 200.0], [41.8, 200.0], [41.9, 201.0], [42.0, 201.0], [42.1, 202.0], [42.2, 202.0], [42.3, 203.0], [42.4, 203.0], [42.5, 204.0], [42.6, 204.0], [42.7, 205.0], [42.8, 205.0], [42.9, 206.0], [43.0, 206.0], [43.1, 207.0], [43.2, 207.0], [43.3, 207.0], [43.4, 208.0], [43.5, 209.0], [43.6, 209.0], [43.7, 210.0], [43.8, 210.0], [43.9, 211.0], [44.0, 212.0], [44.1, 212.0], [44.2, 212.0], [44.3, 213.0], [44.4, 213.0], [44.5, 214.0], [44.6, 214.0], [44.7, 215.0], [44.8, 215.0], [44.9, 216.0], [45.0, 216.0], [45.1, 217.0], [45.2, 218.0], [45.3, 218.0], [45.4, 219.0], [45.5, 219.0], [45.6, 220.0], [45.7, 220.0], [45.8, 221.0], [45.9, 221.0], [46.0, 222.0], [46.1, 222.0], [46.2, 223.0], [46.3, 223.0], [46.4, 224.0], [46.5, 224.0], [46.6, 225.0], [46.7, 225.0], [46.8, 226.0], [46.9, 227.0], [47.0, 227.0], [47.1, 228.0], [47.2, 228.0], [47.3, 229.0], [47.4, 229.0], [47.5, 230.0], [47.6, 231.0], [47.7, 231.0], [47.8, 232.0], [47.9, 232.0], [48.0, 233.0], [48.1, 233.0], [48.2, 234.0], [48.3, 234.0], [48.4, 235.0], [48.5, 235.0], [48.6, 236.0], [48.7, 237.0], [48.8, 237.0], [48.9, 238.0], [49.0, 239.0], [49.1, 239.0], [49.2, 240.0], [49.3, 241.0], [49.4, 241.0], [49.5, 242.0], [49.6, 242.0], [49.7, 243.0], [49.8, 244.0], [49.9, 244.0], [50.0, 245.0], [50.1, 245.0], [50.2, 246.0], [50.3, 246.0], [50.4, 247.0], [50.5, 247.0], [50.6, 248.0], [50.7, 249.0], [50.8, 249.0], [50.9, 250.0], [51.0, 250.0], [51.1, 251.0], [51.2, 252.0], [51.3, 252.0], [51.4, 253.0], [51.5, 254.0], [51.6, 254.0], [51.7, 255.0], [51.8, 255.0], [51.9, 256.0], [52.0, 257.0], [52.1, 258.0], [52.2, 259.0], [52.3, 259.0], [52.4, 260.0], [52.5, 261.0], [52.6, 261.0], [52.7, 262.0], [52.8, 263.0], [52.9, 263.0], [53.0, 264.0], [53.1, 265.0], [53.2, 266.0], [53.3, 267.0], [53.4, 267.0], [53.5, 268.0], [53.6, 269.0], [53.7, 269.0], [53.8, 270.0], [53.9, 271.0], [54.0, 271.0], [54.1, 272.0], [54.2, 273.0], [54.3, 274.0], [54.4, 274.0], [54.5, 275.0], [54.6, 276.0], [54.7, 276.0], [54.8, 277.0], [54.9, 278.0], [55.0, 278.0], [55.1, 279.0], [55.2, 280.0], [55.3, 281.0], [55.4, 281.0], [55.5, 282.0], [55.6, 283.0], [55.7, 284.0], [55.8, 285.0], [55.9, 285.0], [56.0, 286.0], [56.1, 287.0], [56.2, 287.0], [56.3, 288.0], [56.4, 289.0], [56.5, 290.0], [56.6, 291.0], [56.7, 292.0], [56.8, 292.0], [56.9, 293.0], [57.0, 294.0], [57.1, 295.0], [57.2, 296.0], [57.3, 296.0], [57.4, 297.0], [57.5, 298.0], [57.6, 299.0], [57.7, 300.0], [57.8, 301.0], [57.9, 302.0], [58.0, 302.0], [58.1, 304.0], [58.2, 304.0], [58.3, 305.0], [58.4, 306.0], [58.5, 307.0], [58.6, 307.0], [58.7, 308.0], [58.8, 309.0], [58.9, 310.0], [59.0, 311.0], [59.1, 311.0], [59.2, 312.0], [59.3, 313.0], [59.4, 314.0], [59.5, 315.0], [59.6, 316.0], [59.7, 317.0], [59.8, 318.0], [59.9, 318.0], [60.0, 319.0], [60.1, 320.0], [60.2, 322.0], [60.3, 322.0], [60.4, 323.0], [60.5, 324.0], [60.6, 326.0], [60.7, 327.0], [60.8, 328.0], [60.9, 329.0], [61.0, 330.0], [61.1, 331.0], [61.2, 332.0], [61.3, 333.0], [61.4, 334.0], [61.5, 335.0], [61.6, 336.0], [61.7, 337.0], [61.8, 338.0], [61.9, 339.0], [62.0, 339.0], [62.1, 340.0], [62.2, 342.0], [62.3, 343.0], [62.4, 344.0], [62.5, 345.0], [62.6, 347.0], [62.7, 348.0], [62.8, 349.0], [62.9, 350.0], [63.0, 350.0], [63.1, 352.0], [63.2, 353.0], [63.3, 354.0], [63.4, 355.0], [63.5, 356.0], [63.6, 357.0], [63.7, 359.0], [63.8, 360.0], [63.9, 361.0], [64.0, 362.0], [64.1, 363.0], [64.2, 365.0], [64.3, 366.0], [64.4, 367.0], [64.5, 367.0], [64.6, 369.0], [64.7, 370.0], [64.8, 371.0], [64.9, 373.0], [65.0, 374.0], [65.1, 376.0], [65.2, 377.0], [65.3, 379.0], [65.4, 381.0], [65.5, 382.0], [65.6, 383.0], [65.7, 385.0], [65.8, 386.0], [65.9, 387.0], [66.0, 388.0], [66.1, 389.0], [66.2, 391.0], [66.3, 392.0], [66.4, 394.0], [66.5, 395.0], [66.6, 396.0], [66.7, 398.0], [66.8, 399.0], [66.9, 400.0], [67.0, 401.0], [67.1, 402.0], [67.2, 404.0], [67.3, 406.0], [67.4, 407.0], [67.5, 408.0], [67.6, 410.0], [67.7, 411.0], [67.8, 413.0], [67.9, 414.0], [68.0, 415.0], [68.1, 417.0], [68.2, 418.0], [68.3, 419.0], [68.4, 421.0], [68.5, 423.0], [68.6, 424.0], [68.7, 426.0], [68.8, 427.0], [68.9, 429.0], [69.0, 430.0], [69.1, 432.0], [69.2, 433.0], [69.3, 435.0], [69.4, 437.0], [69.5, 438.0], [69.6, 439.0], [69.7, 440.0], [69.8, 441.0], [69.9, 444.0], [70.0, 445.0], [70.1, 447.0], [70.2, 449.0], [70.3, 451.0], [70.4, 453.0], [70.5, 454.0], [70.6, 455.0], [70.7, 457.0], [70.8, 459.0], [70.9, 461.0], [71.0, 462.0], [71.1, 464.0], [71.2, 466.0], [71.3, 468.0], [71.4, 469.0], [71.5, 470.0], [71.6, 472.0], [71.7, 474.0], [71.8, 475.0], [71.9, 477.0], [72.0, 479.0], [72.1, 481.0], [72.2, 482.0], [72.3, 484.0], [72.4, 485.0], [72.5, 487.0], [72.6, 489.0], [72.7, 491.0], [72.8, 492.0], [72.9, 495.0], [73.0, 496.0], [73.1, 498.0], [73.2, 500.0], [73.3, 502.0], [73.4, 503.0], [73.5, 506.0], [73.6, 507.0], [73.7, 509.0], [73.8, 511.0], [73.9, 513.0], [74.0, 515.0], [74.1, 518.0], [74.2, 519.0], [74.3, 521.0], [74.4, 523.0], [74.5, 526.0], [74.6, 528.0], [74.7, 530.0], [74.8, 533.0], [74.9, 535.0], [75.0, 537.0], [75.1, 539.0], [75.2, 541.0], [75.3, 543.0], [75.4, 545.0], [75.5, 548.0], [75.6, 551.0], [75.7, 553.0], [75.8, 555.0], [75.9, 558.0], [76.0, 560.0], [76.1, 562.0], [76.2, 564.0], [76.3, 567.0], [76.4, 570.0], [76.5, 573.0], [76.6, 575.0], [76.7, 578.0], [76.8, 580.0], [76.9, 583.0], [77.0, 584.0], [77.1, 587.0], [77.2, 589.0], [77.3, 591.0], [77.4, 594.0], [77.5, 596.0], [77.6, 598.0], [77.7, 601.0], [77.8, 604.0], [77.9, 606.0], [78.0, 610.0], [78.1, 612.0], [78.2, 614.0], [78.3, 616.0], [78.4, 619.0], [78.5, 622.0], [78.6, 625.0], [78.7, 628.0], [78.8, 631.0], [78.9, 635.0], [79.0, 636.0], [79.1, 639.0], [79.2, 641.0], [79.3, 644.0], [79.4, 647.0], [79.5, 650.0], [79.6, 654.0], [79.7, 657.0], [79.8, 660.0], [79.9, 663.0], [80.0, 666.0], [80.1, 669.0], [80.2, 674.0], [80.3, 677.0], [80.4, 679.0], [80.5, 683.0], [80.6, 686.0], [80.7, 689.0], [80.8, 692.0], [80.9, 695.0], [81.0, 698.0], [81.1, 700.0], [81.2, 704.0], [81.3, 707.0], [81.4, 711.0], [81.5, 714.0], [81.6, 719.0], [81.7, 722.0], [81.8, 726.0], [81.9, 729.0], [82.0, 732.0], [82.1, 736.0], [82.2, 740.0], [82.3, 742.0], [82.4, 746.0], [82.5, 749.0], [82.6, 753.0], [82.7, 756.0], [82.8, 759.0], [82.9, 763.0], [83.0, 767.0], [83.1, 771.0], [83.2, 775.0], [83.3, 781.0], [83.4, 784.0], [83.5, 788.0], [83.6, 791.0], [83.7, 795.0], [83.8, 799.0], [83.9, 803.0], [84.0, 806.0], [84.1, 812.0], [84.2, 815.0], [84.3, 822.0], [84.4, 825.0], [84.5, 829.0], [84.6, 832.0], [84.7, 835.0], [84.8, 841.0], [84.9, 845.0], [85.0, 849.0], [85.1, 853.0], [85.2, 857.0], [85.3, 860.0], [85.4, 866.0], [85.5, 871.0], [85.6, 875.0], [85.7, 881.0], [85.8, 888.0], [85.9, 892.0], [86.0, 895.0], [86.1, 901.0], [86.2, 907.0], [86.3, 913.0], [86.4, 918.0], [86.5, 925.0], [86.6, 929.0], [86.7, 934.0], [86.8, 939.0], [86.9, 946.0], [87.0, 949.0], [87.1, 954.0], [87.2, 959.0], [87.3, 963.0], [87.4, 968.0], [87.5, 974.0], [87.6, 981.0], [87.7, 987.0], [87.8, 994.0], [87.9, 998.0], [88.0, 1003.0], [88.1, 1009.0], [88.2, 1015.0], [88.3, 1022.0], [88.4, 1026.0], [88.5, 1032.0], [88.6, 1036.0], [88.7, 1041.0], [88.8, 1049.0], [88.9, 1054.0], [89.0, 1061.0], [89.1, 1067.0], [89.2, 1073.0], [89.3, 1081.0], [89.4, 1086.0], [89.5, 1090.0], [89.6, 1097.0], [89.7, 1102.0], [89.8, 1109.0], [89.9, 1116.0], [90.0, 1123.0], [90.1, 1128.0], [90.2, 1133.0], [90.3, 1141.0], [90.4, 1148.0], [90.5, 1156.0], [90.6, 1163.0], [90.7, 1170.0], [90.8, 1177.0], [90.9, 1184.0], [91.0, 1192.0], [91.1, 1201.0], [91.2, 1209.0], [91.3, 1216.0], [91.4, 1224.0], [91.5, 1230.0], [91.6, 1238.0], [91.7, 1248.0], [91.8, 1259.0], [91.9, 1267.0], [92.0, 1275.0], [92.1, 1282.0], [92.2, 1295.0], [92.3, 1304.0], [92.4, 1311.0], [92.5, 1322.0], [92.6, 1334.0], [92.7, 1345.0], [92.8, 1357.0], [92.9, 1370.0], [93.0, 1380.0], [93.1, 1392.0], [93.2, 1403.0], [93.3, 1420.0], [93.4, 1433.0], [93.5, 1444.0], [93.6, 1453.0], [93.7, 1474.0], [93.8, 1485.0], [93.9, 1503.0], [94.0, 1518.0], [94.1, 1534.0], [94.2, 1561.0], [94.3, 1583.0], [94.4, 1601.0], [94.5, 1626.0], [94.6, 1652.0], [94.7, 1670.0], [94.8, 1696.0], [94.9, 1727.0], [95.0, 1752.0], [95.1, 1779.0], [95.2, 1809.0], [95.3, 1839.0], [95.4, 1877.0], [95.5, 1904.0], [95.6, 1940.0], [95.7, 1984.0], [95.8, 2019.0], [95.9, 2061.0], [96.0, 2088.0], [96.1, 2127.0], [96.2, 2170.0], [96.3, 2210.0], [96.4, 2240.0], [96.5, 2279.0], [96.6, 2335.0], [96.7, 2389.0], [96.8, 2452.0], [96.9, 2491.0], [97.0, 2545.0], [97.1, 2601.0], [97.2, 2669.0], [97.3, 2717.0], [97.4, 2797.0], [97.5, 2848.0], [97.6, 2899.0], [97.7, 2961.0], [97.8, 3029.0], [97.9, 3070.0], [98.0, 3134.0], [98.1, 3182.0], [98.2, 3253.0], [98.3, 3337.0], [98.4, 3464.0], [98.5, 3603.0], [98.6, 3745.0], [98.7, 3856.0], [98.8, 3971.0], [98.9, 4073.0], [99.0, 4202.0], [99.1, 4467.0], [99.2, 4743.0], [99.3, 5054.0], [99.4, 5483.0], [99.5, 6182.0], [99.6, 9156.0], [99.7, 16628.0], [99.8, 19639.0], [99.9, 23893.0], [100.0, 30715.0]], "isOverall": false, "label": "Multiple Keyword Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 14123.0, "series": [{"data": [[1000.0, 25.0], [1100.0, 342.0], [1200.0, 532.0], [1300.0, 434.0], [1400.0, 317.0], [1500.0, 298.0], [1600.0, 225.0], [1700.0, 273.0], [1800.0, 219.0], [1900.0, 231.0], [2000.0, 249.0], [2100.0, 247.0], [2200.0, 254.0], [2300.0, 222.0], [2400.0, 237.0], [2500.0, 235.0], [2600.0, 237.0], [2700.0, 248.0], [2800.0, 238.0], [2900.0, 200.0], [3000.0, 216.0], [3100.0, 238.0], [3300.0, 223.0], [3200.0, 222.0], [3400.0, 225.0], [3500.0, 243.0], [3600.0, 253.0], [3700.0, 238.0], [3800.0, 257.0], [3900.0, 260.0], [4000.0, 263.0], [4300.0, 253.0], [4200.0, 275.0], [4100.0, 227.0], [4400.0, 277.0], [4600.0, 320.0], [4500.0, 271.0], [4700.0, 302.0], [4800.0, 311.0], [4900.0, 313.0], [5000.0, 348.0], [5100.0, 356.0], [5200.0, 347.0], [5300.0, 373.0], [5500.0, 434.0], [5400.0, 413.0], [5600.0, 426.0], [5700.0, 443.0], [5800.0, 465.0], [6100.0, 464.0], [5900.0, 496.0], [6000.0, 477.0], [6200.0, 487.0], [6300.0, 466.0], [6500.0, 444.0], [6600.0, 429.0], [6400.0, 472.0], [6900.0, 445.0], [6800.0, 424.0], [6700.0, 399.0], [7000.0, 387.0], [7100.0, 394.0], [7300.0, 355.0], [7200.0, 359.0], [7400.0, 374.0], [7600.0, 340.0], [7500.0, 380.0], [7700.0, 312.0], [7800.0, 287.0], [7900.0, 306.0], [8000.0, 260.0], [8100.0, 279.0], [8400.0, 199.0], [8300.0, 246.0], [8200.0, 227.0], [8700.0, 168.0], [8600.0, 185.0], [8500.0, 198.0], [9000.0, 114.0], [8800.0, 142.0], [9200.0, 67.0], [9100.0, 82.0], [8900.0, 122.0], [9500.0, 27.0], [9700.0, 8.0], [9300.0, 54.0], [9400.0, 35.0], [9600.0, 18.0], [9800.0, 5.0], [9900.0, 5.0], [10200.0, 4.0], [10100.0, 2.0], [10000.0, 1.0]], "isOverall": false, "label": "Sitemap Request", "isController": false}, {"data": [[0.0, 2803.0], [600.0, 79.0], [700.0, 66.0], [800.0, 43.0], [900.0, 55.0], [1000.0, 72.0], [1100.0, 121.0], [1200.0, 92.0], [1300.0, 48.0], [1400.0, 55.0], [1500.0, 31.0], [100.0, 14123.0], [1600.0, 26.0], [1700.0, 25.0], [1800.0, 17.0], [1900.0, 18.0], [2000.0, 33.0], [2100.0, 23.0], [2200.0, 15.0], [2300.0, 10.0], [2400.0, 5.0], [2500.0, 7.0], [2600.0, 2.0], [2800.0, 3.0], [2700.0, 6.0], [2900.0, 4.0], [3000.0, 8.0], [3100.0, 2.0], [200.0, 6048.0], [3200.0, 1.0], [3300.0, 1.0], [3800.0, 1.0], [300.0, 829.0], [400.0, 223.0], [500.0, 105.0]], "isOverall": false, "label": "Single Keyword Request", "isController": false}, {"data": [[0.0, 3381.0], [100.0, 7018.0], [200.0, 4012.0], [300.0, 2306.0], [400.0, 1573.0], [500.0, 1119.0], [600.0, 859.0], [700.0, 685.0], [800.0, 566.0], [900.0, 462.0], [1000.0, 432.0], [1100.0, 359.0], [1200.0, 290.0], [1300.0, 232.0], [1400.0, 172.0], [1500.0, 132.0], [1600.0, 103.0], [1700.0, 92.0], [1800.0, 80.0], [1900.0, 63.0], [2000.0, 70.0], [2100.0, 63.0], [2300.0, 41.0], [2200.0, 66.0], [2400.0, 52.0], [2500.0, 46.0], [2600.0, 44.0], [2800.0, 48.0], [2700.0, 34.0], [2900.0, 43.0], [3000.0, 43.0], [3100.0, 47.0], [3300.0, 26.0], [3200.0, 30.0], [3400.0, 15.0], [3500.0, 18.0], [3600.0, 21.0], [3700.0, 17.0], [3800.0, 24.0], [3900.0, 30.0], [4000.0, 16.0], [4100.0, 19.0], [4200.0, 14.0], [4300.0, 3.0], [4600.0, 8.0], [4500.0, 10.0], [4400.0, 12.0], [4700.0, 7.0], [4800.0, 7.0], [5000.0, 9.0], [5100.0, 4.0], [4900.0, 8.0], [5300.0, 9.0], [5200.0, 3.0], [5400.0, 8.0], [5600.0, 1.0], [5500.0, 6.0], [5700.0, 7.0], [5800.0, 2.0], [6100.0, 4.0], [5900.0, 3.0], [6000.0, 2.0], [6400.0, 2.0], [6500.0, 3.0], [6600.0, 5.0], [6900.0, 2.0], [6800.0, 1.0], [7100.0, 1.0], [7000.0, 1.0], [7200.0, 1.0], [7600.0, 2.0], [7800.0, 1.0], [7900.0, 1.0], [8100.0, 1.0], [8800.0, 1.0], [9100.0, 1.0], [8900.0, 1.0], [9200.0, 1.0], [10000.0, 1.0], [10800.0, 1.0], [11900.0, 1.0], [12600.0, 1.0], [12400.0, 2.0], [12700.0, 1.0], [12900.0, 2.0], [13100.0, 1.0], [13700.0, 1.0], [14300.0, 1.0], [14200.0, 1.0], [15100.0, 1.0], [15200.0, 1.0], [15800.0, 1.0], [15500.0, 1.0], [15900.0, 2.0], [16300.0, 2.0], [16100.0, 1.0], [16400.0, 1.0], [16600.0, 3.0], [17400.0, 1.0], [17000.0, 2.0], [17100.0, 1.0], [17300.0, 1.0], [16800.0, 1.0], [17900.0, 1.0], [18000.0, 1.0], [18300.0, 1.0], [18400.0, 1.0], [17700.0, 1.0], [19300.0, 4.0], [18600.0, 2.0], [19400.0, 1.0], [19100.0, 1.0], [19600.0, 3.0], [20100.0, 1.0], [20400.0, 1.0], [20300.0, 1.0], [19900.0, 1.0], [19500.0, 1.0], [21000.0, 1.0], [20500.0, 1.0], [21200.0, 2.0], [21100.0, 1.0], [20800.0, 1.0], [21400.0, 1.0], [21500.0, 1.0], [20600.0, 1.0], [21800.0, 2.0], [22500.0, 3.0], [22000.0, 1.0], [22800.0, 1.0], [22900.0, 2.0], [22700.0, 1.0], [23500.0, 1.0], [24100.0, 1.0], [24300.0, 2.0], [23800.0, 1.0], [24500.0, 1.0], [23900.0, 1.0], [26200.0, 1.0], [26000.0, 1.0], [26100.0, 1.0], [25800.0, 1.0], [26600.0, 1.0], [26900.0, 1.0], [27600.0, 3.0], [27000.0, 1.0], [28200.0, 2.0], [28600.0, 2.0], [28700.0, 1.0], [30300.0, 1.0], [29800.0, 2.0], [30700.0, 1.0], [30400.0, 1.0]], "isOverall": false, "label": "Multiple Keyword Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 30700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 7552.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 42334.0, "series": [{"data": [[0.0, 42334.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 7552.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 25114.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.3666666666666665, "minX": 1.68574008E12, "maxY": 50.0, "series": [{"data": [[1.68574086E12, 50.0], [1.68574266E12, 50.0], [1.68574206E12, 50.0], [1.68574224E12, 50.0], [1.68574164E12, 50.0], [1.68574026E12, 50.0], [1.68574122E12, 50.0], [1.68574068E12, 50.0], [1.68574284E12, 50.0], [1.6857411E12, 50.0], [1.68574242E12, 50.0], [1.68574182E12, 50.0], [1.68574008E12, 48.983379501385116], [1.6857417E12, 50.0], [1.6857402E12, 50.0], [1.6857408E12, 50.0], [1.68574128E12, 50.0], [1.68574062E12, 50.0], [1.6857429E12, 50.0], [1.6857423E12, 50.0], [1.68574248E12, 50.0], [1.68574188E12, 50.0], [1.68574146E12, 50.0], [1.68574044E12, 50.0], [1.68574308E12, 21.188109161793335], [1.68574104E12, 50.0], [1.68574296E12, 50.0], [1.68574236E12, 50.0], [1.68574194E12, 50.0], [1.68574134E12, 50.0], [1.68574056E12, 50.0], [1.68574152E12, 50.0], [1.68574038E12, 50.0], [1.68574314E12, 1.3666666666666665], [1.68574098E12, 50.0], [1.68574254E12, 50.0], [1.68574272E12, 50.0], [1.68574212E12, 50.0], [1.685742E12, 50.0], [1.6857414E12, 50.0], [1.6857405E12, 50.0], [1.68574302E12, 47.1389076196898], [1.68574092E12, 50.0], [1.6857426E12, 50.0], [1.68574218E12, 50.0], [1.68574158E12, 50.0], [1.68574032E12, 50.0], [1.68574176E12, 50.0], [1.68574014E12, 50.0], [1.68574116E12, 50.0], [1.68574074E12, 50.0], [1.68574278E12, 50.0]], "isOverall": false, "label": "setUp Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68574314E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 70.0, "minX": 1.0, "maxY": 6210.818181818182, "series": [{"data": [[2.0, 1219.6666666666667], [3.0, 1245.4285714285716], [4.0, 1238.5], [5.0, 1262.7777777777778], [6.0, 1264.2], [7.0, 1282.1111111111113], [8.0, 1144.0], [9.0, 1296.4166666666665], [10.0, 1368.75], [11.0, 1896.8], [12.0, 2278.0], [13.0, 2097.5], [14.0, 2081.0434782608695], [15.0, 3098.0], [16.0, 1584.3333333333333], [17.0, 2351.8], [18.0, 1374.0], [19.0, 2097.3333333333335], [20.0, 2805.0], [21.0, 2241.714285714286], [22.0, 2549.8965517241386], [23.0, 2364.090909090909], [24.0, 2434.0], [25.0, 2519.0], [26.0, 2475.3846153846152], [27.0, 2731.0833333333335], [28.0, 2807.846153846154], [29.0, 3513.75], [30.0, 2874.25], [31.0, 3561.0], [33.0, 3222.0408163265306], [32.0, 3704.5833333333335], [35.0, 3646.875], [34.0, 3421.0], [37.0, 3714.8999999999996], [36.0, 3752.0], [39.0, 4371.125], [38.0, 4479.25], [41.0, 4272.428571428571], [40.0, 5052.0], [43.0, 4551.125000000001], [42.0, 4026.4374999999995], [45.0, 6210.818181818182], [44.0, 5291.459459459458], [47.0, 5254.848484848486], [46.0, 4400.445945945945], [49.0, 5252.235294117646], [48.0, 5777.818181818181], [50.0, 5258.616248457446], [1.0, 1256.857142857143]], "isOverall": false, "label": "Sitemap Request", "isController": false}, {"data": [[49.49971999999994, 5211.791240000009]], "isOverall": false, "label": "Sitemap Request-Aggregated", "isController": false}, {"data": [[33.0, 130.89583333333334], [32.0, 146.45454545454547], [2.0, 83.64285714285714], [35.0, 151.57142857142858], [36.0, 123.0], [37.0, 138.36363636363632], [38.0, 160.6], [39.0, 146.85714285714286], [40.0, 154.375], [41.0, 142.72727272727275], [43.0, 160.30769230769232], [42.0, 161.57142857142858], [44.0, 162.08108108108107], [45.0, 161.45454545454547], [47.0, 158.01041666666666], [46.0, 145.47368421052633], [48.0, 167.83333333333331], [49.0, 201.5], [3.0, 86.76923076923076], [50.0, 217.85344189489305], [4.0, 83.66666666666667], [5.0, 81.58823529411765], [6.0, 84.42857142857143], [7.0, 77.28571428571428], [9.0, 86.41666666666667], [10.0, 76.5], [11.0, 99.5], [13.0, 78.5], [14.0, 97.23809523809524], [15.0, 134.0], [16.0, 96.5], [1.0, 84.83333333333334], [17.0, 91.8], [18.0, 116.5], [19.0, 121.04166666666667], [20.0, 126.30769230769229], [21.0, 78.5], [22.0, 116.10344827586206], [23.0, 100.15384615384616], [24.0, 117.125], [26.0, 111.92307692307692], [27.0, 137.1818181818182], [28.0, 116.82352941176472], [30.0, 128.0], [31.0, 143.54545454545456]], "isOverall": false, "label": "Single Keyword Request", "isController": false}, {"data": [[49.513720000000326, 215.54692000000009]], "isOverall": false, "label": "Single Keyword Request-Aggregated", "isController": false}, {"data": [[33.0, 467.1764705882353], [32.0, 339.44444444444446], [2.0, 135.21428571428572], [35.0, 306.38461538461536], [37.0, 354.8181818181818], [39.0, 254.07692307692304], [38.0, 160.5], [40.0, 219.28571428571428], [41.0, 578.3333333333333], [42.0, 637.375], [43.0, 391.6666666666667], [45.0, 152.85714285714283], [44.0, 865.1388888888889], [47.0, 430.44680851063833], [46.0, 365.77922077922074], [48.0, 2216.5833333333335], [49.0, 397.2105263157895], [3.0, 115.3076923076923], [50.0, 569.4708638119491], [4.0, 195.5], [5.0, 103.70588235294117], [6.0, 114.5], [7.0, 120.78571428571429], [9.0, 131.41666666666666], [10.0, 154.6], [11.0, 211.0], [12.0, 70.0], [13.0, 698.0], [14.0, 123.45], [15.0, 131.0], [16.0, 2979.333333333333], [1.0, 144.0], [17.0, 174.0], [19.0, 166.21739130434779], [20.0, 224.0], [21.0, 152.75], [22.0, 263.3214285714286], [23.0, 338.75], [24.0, 374.0], [26.0, 209.5714285714286], [27.0, 246.0], [28.0, 238.33333333333337], [29.0, 124.0], [30.0, 163.00000000000003], [31.0, 140.58333333333337]], "isOverall": false, "label": "Multiple Keyword Request", "isController": false}, {"data": [[49.532000000000174, 564.6534000000006]], "isOverall": false, "label": "Multiple Keyword Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 986.4833333333333, "minX": 1.68574008E12, "maxY": 829477.2166666667, "series": [{"data": [[1.68574086E12, 793527.35], [1.68574266E12, 740270.0166666667], [1.68574206E12, 757778.4], [1.68574224E12, 793518.7666666667], [1.68574164E12, 779781.0833333334], [1.68574026E12, 767153.5833333334], [1.68574122E12, 807964.95], [1.68574068E12, 769999.0833333334], [1.68574284E12, 829477.2166666667], [1.6857411E12, 800258.8166666667], [1.68574242E12, 821442.8], [1.68574182E12, 768389.5], [1.68574008E12, 586072.8833333333], [1.6857417E12, 812590.6666666666], [1.6857402E12, 804451.0666666667], [1.6857408E12, 744389.4333333333], [1.68574128E12, 723147.9666666667], [1.68574062E12, 800161.4], [1.6857429E12, 815141.3333333334], [1.6857423E12, 760899.0333333333], [1.68574248E12, 780425.9333333333], [1.68574188E12, 785091.1], [1.68574146E12, 789101.0833333334], [1.68574044E12, 762366.8333333334], [1.68574308E12, 533177.2666666667], [1.68574104E12, 788312.2666666667], [1.68574296E12, 767622.8], [1.68574236E12, 821798.3666666667], [1.68574194E12, 813190.9666666667], [1.68574134E12, 797741.6166666667], [1.68574056E12, 767336.95], [1.68574152E12, 791995.8833333333], [1.68574038E12, 820872.3833333333], [1.68574314E12, 15698.233333333334], [1.68574098E12, 809122.9166666666], [1.68574254E12, 822152.1], [1.68574272E12, 807019.2166666667], [1.68574212E12, 815471.2], [1.685742E12, 795416.1333333333], [1.6857414E12, 788005.3833333333], [1.6857405E12, 787163.9666666667], [1.68574302E12, 785621.3333333334], [1.68574092E12, 763777.9333333333], [1.6857426E12, 787144.2333333333], [1.68574218E12, 804968.2833333333], [1.68574158E12, 779056.65], [1.68574032E12, 762450.5166666667], [1.68574176E12, 790572.9166666666], [1.68574014E12, 778349.15], [1.68574116E12, 775561.7], [1.68574074E12, 815686.5666666667], [1.68574278E12, 805881.3166666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68574086E12, 49511.666666666664], [1.68574266E12, 46301.71666666667], [1.68574206E12, 47194.6], [1.68574224E12, 49389.03333333333], [1.68574164E12, 48531.03333333333], [1.68574026E12, 47848.55], [1.68574122E12, 50276.4], [1.68574068E12, 48011.75], [1.68574284E12, 51858.083333333336], [1.6857411E12, 49750.8], [1.68574242E12, 51391.166666666664], [1.68574182E12, 47707.61666666667], [1.68574008E12, 35995.48333333333], [1.6857417E12, 50819.2], [1.6857402E12, 50106.96666666667], [1.6857408E12, 46365.71666666667], [1.68574128E12, 45146.23333333333], [1.68574062E12, 49960.816666666666], [1.6857429E12, 50737.066666666666], [1.6857423E12, 47444.9], [1.68574248E12, 48583.95], [1.68574188E12, 48828.51666666667], [1.68574146E12, 49283.5], [1.68574044E12, 47398.86666666667], [1.68574308E12, 33797.4], [1.68574104E12, 49500.25], [1.68574296E12, 47994.23333333333], [1.68574236E12, 50917.78333333333], [1.68574194E12, 50714.416666666664], [1.68574134E12, 49575.6], [1.68574056E12, 47713.816666666666], [1.68574152E12, 49482.7], [1.68574038E12, 51268.3], [1.68574314E12, 986.4833333333333], [1.68574098E12, 50217.71666666667], [1.68574254E12, 51203.71666666667], [1.68574272E12, 50206.11666666667], [1.68574212E12, 50778.13333333333], [1.685742E12, 49651.683333333334], [1.6857414E12, 49144.38333333333], [1.6857405E12, 49179.38333333333], [1.68574302E12, 49005.166666666664], [1.68574092E12, 47685.066666666666], [1.6857426E12, 48980.933333333334], [1.68574218E12, 50464.066666666666], [1.68574158E12, 48513.55], [1.68574032E12, 47428.083333333336], [1.68574176E12, 49471.433333333334], [1.68574014E12, 48390.76666666667], [1.68574116E12, 48577.933333333334], [1.68574074E12, 50813.316666666666], [1.68574278E12, 50439.76666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68574314E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 84.66666666666667, "minX": 1.68574008E12, "maxY": 5695.017582417583, "series": [{"data": [[1.68574086E12, 5337.831663326654], [1.68574266E12, 5661.567451820131], [1.68574206E12, 5415.745798319325], [1.68574224E12, 5047.85282258064], [1.68574164E12, 5171.388090349069], [1.68574026E12, 5487.993801652901], [1.68574122E12, 5122.420948616599], [1.68574068E12, 5577.016460905353], [1.68574284E12, 4951.093690248564], [1.6857411E12, 5250.884000000002], [1.68574242E12, 5077.290944123317], [1.68574182E12, 5215.0397489539755], [1.68574008E12, 5202.903030303032], [1.6857417E12, 5056.53398058252], [1.6857402E12, 5249.152475247524], [1.6857408E12, 5684.446581196581], [1.68574128E12, 5695.017582417583], [1.68574062E12, 5183.208], [1.6857429E12, 5167.293542074362], [1.6857423E12, 5488.627368421059], [1.68574248E12, 5310.034693877553], [1.68574188E12, 5229.548979591836], [1.68574146E12, 5101.858870967741], [1.68574044E12, 5485.331236897273], [1.68574308E12, 2466.9426229508185], [1.68574104E12, 5278.095808383226], [1.68574296E12, 5183.672877846796], [1.68574236E12, 5145.9784313725495], [1.68574194E12, 5048.941747572815], [1.68574134E12, 5256.572000000003], [1.68574056E12, 5500.492753623185], [1.68574152E12, 5028.907630522093], [1.68574038E12, 5230.529069767444], [1.68574314E12, 1242.5454545454547], [1.68574098E12, 5356.992063492062], [1.68574254E12, 5138.044660194178], [1.68574272E12, 5090.897233201582], [1.68574212E12, 4968.933333333333], [1.685742E12, 5135.689378757517], [1.6857414E12, 5037.377016129026], [1.6857405E12, 5452.8649193548345], [1.68574302E12, 5207.426294820716], [1.68574092E12, 5401.651452282158], [1.6857426E12, 5227.455465587049], [1.68574218E12, 4874.063953488368], [1.68574158E12, 5314.267346938778], [1.68574032E12, 5472.633891213389], [1.68574176E12, 5030.108000000001], [1.68574014E12, 5447.718685831628], [1.68574116E12, 5515.942973523415], [1.68574074E12, 5190.19411764706], [1.68574278E12, 5223.738188976378]], "isOverall": false, "label": "Sitemap Request", "isController": false}, {"data": [[1.68574086E12, 173.44779116465872], [1.68574266E12, 206.12820512820505], [1.68574206E12, 282.59789473684236], [1.68574224E12, 284.84879032258067], [1.68574164E12, 274.06967213114757], [1.68574026E12, 178.05590062111804], [1.68574122E12, 169.27128712871297], [1.68574068E12, 176.41237113402067], [1.68574284E12, 219.81644359464633], [1.6857411E12, 174.57800000000015], [1.68574242E12, 201.9115384615384], [1.68574182E12, 253.78423236514547], [1.68574008E12, 170.3289473684211], [1.6857417E12, 298.1106796116501], [1.6857402E12, 169.79603960396042], [1.6857408E12, 173.29914529914524], [1.68574128E12, 191.3034934497817], [1.68574062E12, 173.91071428571453], [1.6857429E12, 187.16634050880626], [1.6857423E12, 221.75675675675663], [1.68574248E12, 196.4171779141104], [1.68574188E12, 316.97759674134477], [1.68574146E12, 272.9008097165992], [1.68574044E12, 166.84100418410046], [1.68574308E12, 110.82066869300904], [1.68574104E12, 178.3947895791582], [1.68574296E12, 212.13043478260852], [1.68574236E12, 175.4529411764704], [1.68574194E12, 265.36007827788654], [1.68574134E12, 285.95791583166306], [1.68574056E12, 171.69937369519837], [1.68574152E12, 288.6252505010018], [1.68574038E12, 166.70656370656363], [1.68574314E12, 84.66666666666667], [1.68574098E12, 171.80830039525682], [1.68574254E12, 196.77475728155324], [1.68574272E12, 202.19367588932806], [1.68574212E12, 304.41015625000006], [1.685742E12, 237.48103792415168], [1.6857414E12, 296.91532258064524], [1.6857405E12, 168.11693548387095], [1.68574302E12, 175.51934826883925], [1.68574092E12, 171.5530145530145], [1.6857426E12, 178.75506072874492], [1.68574218E12, 300.91960784313716], [1.68574158E12, 318.40612244897943], [1.68574032E12, 174.5010482180294], [1.68574176E12, 328.6754032258064], [1.68574014E12, 173.3292181069957], [1.68574116E12, 172.73319755600812], [1.68574074E12, 171.22504892367905], [1.68574278E12, 209.75787401574806]], "isOverall": false, "label": "Single Keyword Request", "isController": false}, {"data": [[1.68574086E12, 544.2159999999996], [1.68574266E12, 569.5225806451609], [1.68574206E12, 639.5021008403359], [1.68574224E12, 653.6786427145706], [1.68574164E12, 637.231707317073], [1.68574026E12, 551.5187500000005], [1.68574122E12, 515.1846758349703], [1.68574068E12, 542.0977130977128], [1.68574284E12, 522.7126436781604], [1.6857411E12, 534.7658730158724], [1.68574242E12, 496.84660194174774], [1.68574182E12, 631.2053941908706], [1.68574008E12, 514.1420911528147], [1.6857417E12, 622.9625246548324], [1.6857402E12, 511.26534653465393], [1.6857408E12, 544.5150214592275], [1.68574128E12, 569.4646017699118], [1.68574062E12, 476.7351778656127], [1.6857429E12, 534.9570312500009], [1.6857423E12, 549.6317991631794], [1.68574248E12, 567.3367346938766], [1.68574188E12, 571.5171717171708], [1.68574146E12, 697.834], [1.68574044E12, 514.1882845188283], [1.68574308E12, 269.14803625377675], [1.68574104E12, 525.2173038229374], [1.68574296E12, 617.8907216494839], [1.68574236E12, 628.0308285163776], [1.68574194E12, 639.9055118110241], [1.68574134E12, 666.6600000000001], [1.68574056E12, 579.9230769230763], [1.68574152E12, 645.1282565130255], [1.68574038E12, 541.1259689922477], [1.68574314E12, 167.3], [1.68574098E12, 523.9724409448813], [1.68574254E12, 555.6814671814672], [1.68574272E12, 557.7588932806318], [1.68574212E12, 572.0604288499028], [1.685742E12, 549.3413173652696], [1.6857414E12, 595.9716599190281], [1.6857405E12, 526.1494949494946], [1.68574302E12, 519.3448979591826], [1.68574092E12, 535.9999999999995], [1.6857426E12, 563.8215010141987], [1.68574218E12, 649.0279441117767], [1.68574158E12, 567.2813141683775], [1.68574032E12, 496.288100208768], [1.68574176E12, 654.2959999999995], [1.68574014E12, 550.7591836734691], [1.68574116E12, 497.80698151950725], [1.68574074E12, 532.4543689320383], [1.68574278E12, 620.223968565815]], "isOverall": false, "label": "Multiple Keyword Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68574314E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 83.0, "minX": 1.68574008E12, "maxY": 5691.95824175824, "series": [{"data": [[1.68574086E12, 5337.2785571142285], [1.68574266E12, 5660.965738758028], [1.68574206E12, 5414.031512605045], [1.68574224E12, 5045.2479838709705], [1.68574164E12, 5168.731006160165], [1.68574026E12, 5487.396694214877], [1.68574122E12, 5121.841897233207], [1.68574068E12, 5576.403292181071], [1.68574284E12, 4950.432122370936], [1.6857411E12, 5250.306], [1.68574242E12, 5076.662813102117], [1.68574182E12, 5213.855648535561], [1.68574008E12, 5202.396969696974], [1.6857417E12, 5054.753398058254], [1.6857402E12, 5248.580198019804], [1.6857408E12, 5683.861111111116], [1.68574128E12, 5691.95824175824], [1.68574062E12, 5182.583999999993], [1.6857429E12, 5166.637964774952], [1.6857423E12, 5486.642105263163], [1.68574248E12, 5309.448979591835], [1.68574188E12, 5227.806122448985], [1.68574146E12, 5100.2560483870975], [1.68574044E12, 5484.809224318655], [1.68574308E12, 2466.327868852458], [1.68574104E12, 5277.447105788424], [1.68574296E12, 5182.939958592128], [1.68574236E12, 5145.329411764703], [1.68574194E12, 5045.99611650485], [1.68574134E12, 5254.481999999998], [1.68574056E12, 5499.906832298139], [1.68574152E12, 5027.538152610443], [1.68574038E12, 5229.932170542634], [1.68574314E12, 1242.0], [1.68574098E12, 5356.4107142857165], [1.68574254E12, 5137.46019417476], [1.68574272E12, 5089.05928853755], [1.68574212E12, 4968.156862745096], [1.685742E12, 5134.018036072148], [1.6857414E12, 5035.375000000008], [1.6857405E12, 5452.274193548388], [1.68574302E12, 5206.85657370518], [1.68574092E12, 5401.058091286304], [1.6857426E12, 5226.840080971659], [1.68574218E12, 4871.858527131783], [1.68574158E12, 5313.42244897959], [1.68574032E12, 5471.602510460257], [1.68574176E12, 5027.08], [1.68574014E12, 5447.193018480497], [1.68574116E12, 5515.323828920569], [1.68574074E12, 5189.582352941181], [1.68574278E12, 5222.265748031497]], "isOverall": false, "label": "Sitemap Request", "isController": false}, {"data": [[1.68574086E12, 171.78514056224876], [1.68574266E12, 201.52136752136752], [1.68574206E12, 278.5115789473687], [1.68574224E12, 282.56451612903163], [1.68574164E12, 268.96516393442647], [1.68574026E12, 176.46169772256718], [1.68574122E12, 167.60792079207903], [1.68574068E12, 174.78144329896907], [1.68574284E12, 217.55831739961766], [1.6857411E12, 172.92000000000002], [1.68574242E12, 200.16923076923092], [1.68574182E12, 251.03526970954366], [1.68574008E12, 168.71315789473707], [1.6857417E12, 295.19805825242724], [1.6857402E12, 168.19801980198025], [1.6857408E12, 171.64529914529908], [1.68574128E12, 189.50436681222706], [1.68574062E12, 172.27976190476184], [1.6857429E12, 185.42661448140882], [1.6857423E12, 219.32848232848224], [1.68574248E12, 194.64621676891622], [1.68574188E12, 314.2668024439918], [1.68574146E12, 268.81781376518217], [1.68574044E12, 165.23012552301262], [1.68574308E12, 109.17325227963532], [1.68574104E12, 176.74749498997986], [1.68574296E12, 210.2836438923395], [1.68574236E12, 173.7529411764706], [1.68574194E12, 260.99021526418795], [1.68574134E12, 282.38476953907775], [1.68574056E12, 169.97912317327769], [1.68574152E12, 284.5150300601202], [1.68574038E12, 165.0965250965252], [1.68574314E12, 83.0], [1.68574098E12, 170.16600790513834], [1.68574254E12, 195.0776699029127], [1.68574272E12, 199.9466403162056], [1.68574212E12, 299.8339843749997], [1.685742E12, 233.6986027944113], [1.6857414E12, 293.4193548387095], [1.6857405E12, 166.4919354838708], [1.68574302E12, 173.80448065173107], [1.68574092E12, 169.96257796257802], [1.6857426E12, 177.0020242914978], [1.68574218E12, 298.0921568627449], [1.68574158E12, 314.6061224489801], [1.68574032E12, 172.88050314465414], [1.68574176E12, 325.32459677419376], [1.68574014E12, 171.6995884773662], [1.68574116E12, 171.10183299389007], [1.68574074E12, 169.5342465753425], [1.68574278E12, 207.99409448818898]], "isOverall": false, "label": "Single Keyword Request", "isController": false}, {"data": [[1.68574086E12, 542.5299999999996], [1.68574266E12, 567.677419354838], [1.68574206E12, 636.2521008403363], [1.68574224E12, 648.4451097804387], [1.68574164E12, 632.4349593495937], [1.68574026E12, 549.8729166666669], [1.68574122E12, 513.4479371316309], [1.68574068E12, 540.3929313929314], [1.68574284E12, 520.4540229885062], [1.6857411E12, 533.0694444444449], [1.68574242E12, 495.093203883495], [1.68574182E12, 628.0892116182569], [1.68574008E12, 512.4182305630028], [1.6857417E12, 617.8717948717948], [1.6857402E12, 509.59801980197994], [1.6857408E12, 542.8261802575107], [1.68574128E12, 566.6305309734512], [1.68574062E12, 475.10474308300377], [1.6857429E12, 533.0332031249997], [1.6857423E12, 546.2364016736406], [1.68574248E12, 565.4999999999999], [1.68574188E12, 565.8686868686867], [1.68574146E12, 693.536000000001], [1.68574044E12, 512.5230125523012], [1.68574308E12, 267.5649546827798], [1.68574104E12, 523.5372233400407], [1.68574296E12, 615.8536082474221], [1.68574236E12, 626.2890173410414], [1.68574194E12, 636.6141732283468], [1.68574134E12, 661.4320000000001], [1.68574056E12, 578.1683991683985], [1.68574152E12, 640.7474949899802], [1.68574038E12, 539.4593023255813], [1.68574314E12, 165.60000000000002], [1.68574098E12, 522.2755905511805], [1.68574254E12, 553.8108108108112], [1.68574272E12, 554.4031620553362], [1.68574212E12, 567.853801169591], [1.685742E12, 544.9840319361269], [1.6857414E12, 592.0222672064777], [1.6857405E12, 524.468686868686], [1.68574302E12, 517.5714285714286], [1.68574092E12, 534.2922755741126], [1.6857426E12, 561.9756592292094], [1.68574218E12, 645.121756487026], [1.68574158E12, 562.8891170431207], [1.68574032E12, 494.59290187891423], [1.68574176E12, 647.3160000000003], [1.68574014E12, 549.0551020408163], [1.68574116E12, 496.12114989733044], [1.68574074E12, 530.7417475728155], [1.68574278E12, 618.1728880157169]], "isOverall": false, "label": "Multiple Keyword Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68574314E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68574008E12, "maxY": 2.747368421052632, "series": [{"data": [[1.68574086E12, 0.0], [1.68574266E12, 0.0], [1.68574206E12, 0.0], [1.68574224E12, 0.0], [1.68574164E12, 0.0], [1.68574026E12, 0.0], [1.68574122E12, 0.0], [1.68574068E12, 0.0], [1.68574284E12, 0.0], [1.6857411E12, 0.0], [1.68574242E12, 0.0], [1.68574182E12, 0.0], [1.68574008E12, 0.0], [1.6857417E12, 0.0], [1.6857402E12, 0.0], [1.6857408E12, 0.0], [1.68574128E12, 0.0], [1.68574062E12, 0.0], [1.6857429E12, 0.0], [1.6857423E12, 0.0], [1.68574248E12, 0.0], [1.68574188E12, 0.0], [1.68574146E12, 0.0], [1.68574044E12, 0.0], [1.68574308E12, 0.0], [1.68574104E12, 0.0], [1.68574296E12, 0.0], [1.68574236E12, 0.0], [1.68574194E12, 0.0], [1.68574134E12, 0.0], [1.68574056E12, 0.0], [1.68574152E12, 0.0], [1.68574038E12, 0.0], [1.68574314E12, 0.0], [1.68574098E12, 0.0], [1.68574254E12, 0.0], [1.68574272E12, 0.0], [1.68574212E12, 0.0], [1.685742E12, 0.0], [1.6857414E12, 0.0], [1.6857405E12, 0.0], [1.68574302E12, 0.0], [1.68574092E12, 0.0], [1.6857426E12, 0.0], [1.68574218E12, 0.0], [1.68574158E12, 0.0], [1.68574032E12, 0.0], [1.68574176E12, 0.0], [1.68574014E12, 0.0], [1.68574116E12, 0.0], [1.68574074E12, 0.0], [1.68574278E12, 0.0]], "isOverall": false, "label": "Sitemap Request", "isController": false}, {"data": [[1.68574086E12, 1.222891566265059], [1.68574266E12, 1.1495726495726484], [1.68574206E12, 1.1663157894736833], [1.68574224E12, 1.1733870967741935], [1.68574164E12, 1.1782786885245908], [1.68574026E12, 1.3064182194616978], [1.68574122E12, 1.1603960396039594], [1.68574068E12, 1.3010309278350531], [1.68574284E12, 1.173996175908222], [1.6857411E12, 1.1639999999999997], [1.68574242E12, 1.1750000000000005], [1.68574182E12, 1.1950207468879666], [1.68574008E12, 2.747368421052632], [1.6857417E12, 1.18252427184466], [1.6857402E12, 1.3801980198019805], [1.6857408E12, 1.1965811965811957], [1.68574128E12, 1.15938864628821], [1.68574062E12, 1.2757936507936518], [1.6857429E12, 1.1878669275929552], [1.6857423E12, 1.207900207900208], [1.68574248E12, 1.1717791411042942], [1.68574188E12, 1.1792260692464362], [1.68574146E12, 1.190283400809716], [1.68574044E12, 1.2426778242677838], [1.68574308E12, 1.1610942249240122], [1.68574104E12, 1.1683366733466949], [1.68574296E12, 1.2111801242236013], [1.68574236E12, 1.1490196078431367], [1.68574194E12, 1.1272015655577299], [1.68574134E12, 1.176352705410822], [1.68574056E12, 1.2693110647181638], [1.68574152E12, 1.1763527054108223], [1.68574038E12, 1.2683397683397692], [1.68574314E12, 1.3333333333333333], [1.68574098E12, 1.2094861660079042], [1.68574254E12, 1.14368932038835], [1.68574272E12, 1.1521739130434787], [1.68574212E12, 1.208984375], [1.685742E12, 1.1516966067864256], [1.6857414E12, 1.1471774193548394], [1.6857405E12, 1.2681451612903216], [1.68574302E12, 1.1649694501018328], [1.68574092E12, 1.166320166320166], [1.6857426E12, 1.1680161943319831], [1.68574218E12, 1.2039215686274514], [1.68574158E12, 1.2163265306122453], [1.68574032E12, 1.3270440251572326], [1.68574176E12, 1.1814516129032244], [1.68574014E12, 1.5720164609053502], [1.68574116E12, 1.1812627291242368], [1.68574074E12, 1.250489236790608], [1.68574278E12, 1.1968503937007873]], "isOverall": false, "label": "Single Keyword Request", "isController": false}, {"data": [[1.68574086E12, 0.0], [1.68574266E12, 0.0], [1.68574206E12, 0.0], [1.68574224E12, 0.0], [1.68574164E12, 0.0], [1.68574026E12, 0.0], [1.68574122E12, 0.0], [1.68574068E12, 0.0], [1.68574284E12, 0.0], [1.6857411E12, 0.0], [1.68574242E12, 0.0], [1.68574182E12, 0.0], [1.68574008E12, 0.0], [1.6857417E12, 0.0], [1.6857402E12, 0.0], [1.6857408E12, 0.0], [1.68574128E12, 0.0], [1.68574062E12, 0.0], [1.6857429E12, 0.0], [1.6857423E12, 0.0], [1.68574248E12, 0.0], [1.68574188E12, 0.0], [1.68574146E12, 0.0], [1.68574044E12, 0.0], [1.68574308E12, 0.0], [1.68574104E12, 0.0], [1.68574296E12, 0.0], [1.68574236E12, 0.0], [1.68574194E12, 0.0], [1.68574134E12, 0.0], [1.68574056E12, 0.0], [1.68574152E12, 0.0], [1.68574038E12, 0.0], [1.68574314E12, 0.0], [1.68574098E12, 0.0], [1.68574254E12, 0.0], [1.68574272E12, 0.0], [1.68574212E12, 0.0], [1.685742E12, 0.0], [1.6857414E12, 0.0], [1.6857405E12, 0.0], [1.68574302E12, 0.0], [1.68574092E12, 0.0], [1.6857426E12, 0.0], [1.68574218E12, 0.0], [1.68574158E12, 0.0], [1.68574032E12, 0.0], [1.68574176E12, 0.0], [1.68574014E12, 0.0], [1.68574116E12, 0.0], [1.68574074E12, 0.0], [1.68574278E12, 0.0]], "isOverall": false, "label": "Multiple Keyword Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68574314E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 30.0, "minX": 1.68574008E12, "maxY": 30715.0, "series": [{"data": [[1.68574086E12, 21290.0], [1.68574266E12, 30420.0], [1.68574206E12, 25899.0], [1.68574224E12, 26678.0], [1.68574164E12, 22599.0], [1.68574026E12, 22806.0], [1.68574122E12, 16466.0], [1.68574068E12, 27650.0], [1.68574284E12, 16823.0], [1.6857411E12, 22946.0], [1.68574242E12, 10097.0], [1.68574182E12, 23954.0], [1.68574008E12, 19625.0], [1.6857417E12, 18447.0], [1.6857402E12, 21879.0], [1.6857408E12, 29826.0], [1.68574128E12, 28640.0], [1.68574062E12, 19349.0], [1.6857429E12, 21564.0], [1.6857423E12, 22076.0], [1.68574248E12, 28702.0], [1.68574188E12, 9268.0], [1.68574146E12, 24391.0], [1.68574044E12, 28299.0], [1.68574308E12, 7929.0], [1.68574104E12, 19337.0], [1.68574296E12, 20611.0], [1.68574236E12, 30715.0], [1.68574194E12, 21152.0], [1.68574134E12, 26014.0], [1.68574056E12, 28681.0], [1.68574152E12, 26159.0], [1.68574038E12, 30375.0], [1.68574314E12, 1311.0], [1.68574098E12, 24397.0], [1.68574254E12, 21419.0], [1.68574272E12, 27624.0], [1.68574212E12, 12927.0], [1.685742E12, 20840.0], [1.6857414E12, 21874.0], [1.6857405E12, 29818.0], [1.68574302E12, 19493.0], [1.68574092E12, 27632.0], [1.6857426E12, 28217.0], [1.68574218E12, 19639.0], [1.68574158E12, 12401.0], [1.68574032E12, 9827.0], [1.68574176E12, 24589.0], [1.68574014E12, 26224.0], [1.68574116E12, 18676.0], [1.68574074E12, 24180.0], [1.68574278E12, 27098.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68574086E12, 6333.0], [1.68574266E12, 8306.7], [1.68574206E12, 6441.2], [1.68574224E12, 6635.600000000003], [1.68574164E12, 6465.600000000001], [1.68574026E12, 6773.0], [1.68574122E12, 5746.200000000001], [1.68574068E12, 8068.4000000000015], [1.68574284E12, 5637.100000000001], [1.6857411E12, 6543.5], [1.68574242E12, 6794.0], [1.68574182E12, 6612.000000000003], [1.68574008E12, 5730.000000000001], [1.6857417E12, 5904.8], [1.6857402E12, 6411.4000000000015], [1.6857408E12, 7985.0], [1.68574128E12, 7986.4000000000015], [1.68574062E12, 6506.6], [1.6857429E12, 6302.0], [1.6857423E12, 7430.0], [1.68574248E12, 6954.0], [1.68574188E12, 6903.3], [1.68574146E12, 6969.8], [1.68574044E12, 8111.8], [1.68574308E12, 2958.0], [1.68574104E12, 6847.200000000001], [1.68574296E12, 6015.0], [1.68574236E12, 5713.0], [1.68574194E12, 6120.0], [1.68574134E12, 6874.0], [1.68574056E12, 7704.8], [1.68574152E12, 6564.3], [1.68574038E12, 6739.9000000000015], [1.68574314E12, 1279.9], [1.68574098E12, 7015.100000000001], [1.68574254E12, 6292.100000000001], [1.68574272E12, 6565.9000000000015], [1.68574212E12, 5892.800000000001], [1.685742E12, 6712.0], [1.6857414E12, 6539.3], [1.6857405E12, 7848.8], [1.68574302E12, 6489.400000000004], [1.68574092E12, 7258.200000000001], [1.6857426E12, 6589.2], [1.68574218E12, 5553.400000000001], [1.68574158E12, 6892.200000000001], [1.68574032E12, 7962.0], [1.68574176E12, 6778.2], [1.68574014E12, 7211.6], [1.68574116E12, 6816.0], [1.68574074E12, 7126.6], [1.68574278E12, 6646.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68574086E12, 7363.48], [1.68574266E12, 9121.9], [1.68574206E12, 9552.92], [1.68574224E12, 8290.039999999995], [1.68574164E12, 8292.6], [1.68574026E12, 8750.279999999999], [1.68574122E12, 6617.169999999999], [1.68574068E12, 8789.050000000001], [1.68574284E12, 6692.559999999996], [1.6857411E12, 8166.8], [1.68574242E12, 7793.800000000002], [1.68574182E12, 8554.689999999993], [1.68574008E12, 7399.560000000001], [1.6857417E12, 7489.0999999999885], [1.6857402E12, 7684.519999999998], [1.6857408E12, 9385.710000000001], [1.68574128E12, 9531.34], [1.68574062E12, 7567.010000000001], [1.6857429E12, 7706.000000000004], [1.6857423E12, 9296.500000000004], [1.68574248E12, 8992.4], [1.68574188E12, 8185.22], [1.68574146E12, 8486.71], [1.68574044E12, 9242.880000000001], [1.68574308E12, 4799.550000000001], [1.68574104E12, 8451.5], [1.68574296E12, 6896.160000000001], [1.68574236E12, 9297.799999999992], [1.68574194E12, 7327.200000000001], [1.68574134E12, 8664.0], [1.68574056E12, 8854.959999999997], [1.68574152E12, 8131.24], [1.68574038E12, 8711.970000000001], [1.68574314E12, 1311.0], [1.68574098E12, 8446.289999999999], [1.68574254E12, 8131.2], [1.68574272E12, 7865.869999999999], [1.68574212E12, 6984.55999999999], [1.685742E12, 8014.120000000001], [1.6857414E12, 8265.209999999986], [1.6857405E12, 9114.999999999996], [1.68574302E12, 8462.76], [1.68574092E12, 9083.949999999997], [1.6857426E12, 8866.560000000003], [1.68574218E12, 7045.52], [1.68574158E12, 8789.839999999998], [1.68574032E12, 9151.350000000002], [1.68574176E12, 8122.6799999999985], [1.68574014E12, 9070.32], [1.68574116E12, 9259.2], [1.68574074E12, 8136.0], [1.68574278E12, 8512.62]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68574086E12, 6709.299999999999], [1.68574266E12, 8707.95], [1.68574206E12, 8033.5999999999985], [1.68574224E12, 7391.099999999999], [1.68574164E12, 7334.6], [1.68574026E12, 8072.199999999999], [1.68574122E12, 6130.250000000001], [1.68574068E12, 8436.05], [1.68574284E12, 6065.75], [1.6857411E12, 7363.5], [1.68574242E12, 7237.75], [1.68574182E12, 7634.099999999998], [1.68574008E12, 6550.599999999997], [1.6857417E12, 6567.399999999999], [1.6857402E12, 6925.400000000001], [1.6857408E12, 8757.949999999999], [1.68574128E12, 8858.1], [1.68574062E12, 6978.700000000001], [1.6857429E12, 6953.25], [1.6857423E12, 8504.25], [1.68574248E12, 8063.5], [1.68574188E12, 7452.599999999999], [1.68574146E12, 7377.25], [1.68574044E12, 8494.8], [1.68574308E12, 3901.6], [1.68574104E12, 7704.1], [1.68574296E12, 6315.799999999999], [1.68574236E12, 6814.0], [1.68574194E12, 6630.0], [1.68574134E12, 7785.0], [1.68574056E12, 8350.2], [1.68574152E12, 7434.149999999997], [1.68574038E12, 7655.849999999998], [1.68574314E12, 1307.15], [1.68574098E12, 7491.2], [1.68574254E12, 6992.1], [1.68574272E12, 7188.849999999999], [1.68574212E12, 6300.799999999995], [1.685742E12, 7233.799999999999], [1.6857414E12, 7176.249999999999], [1.6857405E12, 8454.199999999999], [1.68574302E12, 7662.5999999999985], [1.68574092E12, 8364.099999999999], [1.6857426E12, 8138.599999999997], [1.68574218E12, 6299.799999999999], [1.68574158E12, 7673.0], [1.68574032E12, 8671.5], [1.68574176E12, 7320.599999999999], [1.68574014E12, 7979.799999999999], [1.68574116E12, 7930.5], [1.68574074E12, 7512.299999999999], [1.68574278E12, 7684.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68574086E12, 37.0], [1.68574266E12, 43.0], [1.68574206E12, 36.0], [1.68574224E12, 33.0], [1.68574164E12, 38.0], [1.68574026E12, 37.0], [1.68574122E12, 48.0], [1.68574068E12, 41.0], [1.68574284E12, 49.0], [1.6857411E12, 42.0], [1.68574242E12, 40.0], [1.68574182E12, 39.0], [1.68574008E12, 35.0], [1.6857417E12, 47.0], [1.6857402E12, 39.0], [1.6857408E12, 47.0], [1.68574128E12, 38.0], [1.68574062E12, 40.0], [1.6857429E12, 40.0], [1.6857423E12, 37.0], [1.68574248E12, 34.0], [1.68574188E12, 39.0], [1.68574146E12, 44.0], [1.68574044E12, 33.0], [1.68574308E12, 40.0], [1.68574104E12, 34.0], [1.68574296E12, 45.0], [1.68574236E12, 49.0], [1.68574194E12, 34.0], [1.68574134E12, 36.0], [1.68574056E12, 34.0], [1.68574152E12, 47.0], [1.68574038E12, 40.0], [1.68574314E12, 72.0], [1.68574098E12, 42.0], [1.68574254E12, 47.0], [1.68574272E12, 47.0], [1.68574212E12, 41.0], [1.685742E12, 46.0], [1.6857414E12, 44.0], [1.6857405E12, 30.0], [1.68574302E12, 46.0], [1.68574092E12, 43.0], [1.6857426E12, 41.0], [1.68574218E12, 45.0], [1.68574158E12, 40.0], [1.68574032E12, 48.0], [1.68574176E12, 39.0], [1.68574014E12, 38.0], [1.68574116E12, 35.0], [1.68574074E12, 45.0], [1.68574278E12, 43.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68574086E12, 275.0], [1.68574266E12, 302.5], [1.68574206E12, 411.0], [1.68574224E12, 395.0], [1.68574164E12, 373.0], [1.68574026E12, 264.0], [1.68574122E12, 266.0], [1.68574068E12, 285.5], [1.68574284E12, 284.5], [1.6857411E12, 267.0], [1.68574242E12, 293.0], [1.68574182E12, 362.0], [1.68574008E12, 252.0], [1.6857417E12, 409.0], [1.6857402E12, 250.0], [1.6857408E12, 279.0], [1.68574128E12, 274.0], [1.68574062E12, 261.0], [1.6857429E12, 287.5], [1.6857423E12, 328.5], [1.68574248E12, 291.0], [1.68574188E12, 412.0], [1.68574146E12, 378.5], [1.68574044E12, 272.0], [1.68574308E12, 172.5], [1.68574104E12, 279.0], [1.68574296E12, 315.0], [1.68574236E12, 262.0], [1.68574194E12, 380.5], [1.68574134E12, 395.0], [1.68574056E12, 273.0], [1.68574152E12, 381.5], [1.68574038E12, 250.0], [1.68574314E12, 149.5], [1.68574098E12, 271.0], [1.68574254E12, 294.0], [1.68574272E12, 304.5], [1.68574212E12, 411.0], [1.685742E12, 319.0], [1.6857414E12, 416.5], [1.6857405E12, 275.0], [1.68574302E12, 266.0], [1.68574092E12, 265.5], [1.6857426E12, 277.0], [1.68574218E12, 417.0], [1.68574158E12, 381.0], [1.68574032E12, 281.0], [1.68574176E12, 445.0], [1.68574014E12, 278.0], [1.68574116E12, 270.0], [1.68574074E12, 258.5], [1.68574278E12, 306.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68574314E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 145.0, "minX": 1.0, "maxY": 1247.0, "series": [{"data": [[2.0, 788.5], [3.0, 145.0], [4.0, 1222.5], [5.0, 454.0], [6.0, 319.5], [7.0, 330.0], [8.0, 448.5], [9.0, 1045.0], [10.0, 682.0], [11.0, 532.5], [12.0, 465.0], [13.0, 470.0], [14.0, 431.0], [15.0, 347.0], [16.0, 384.0], [17.0, 309.0], [18.0, 307.0], [19.0, 339.5], [20.0, 301.5], [21.0, 302.5], [22.0, 306.0], [23.0, 305.0], [24.0, 288.0], [25.0, 295.0], [26.0, 285.5], [27.0, 280.0], [28.0, 279.0], [29.0, 278.0], [30.0, 285.5], [31.0, 278.0], [33.0, 271.0], [32.0, 310.5], [34.0, 308.0], [35.0, 274.5], [37.0, 281.0], [36.0, 297.0], [39.0, 289.0], [38.0, 304.5], [41.0, 263.0], [40.0, 294.5], [43.0, 307.0], [42.0, 261.0], [45.0, 340.0], [44.0, 324.5], [46.0, 332.5], [47.0, 253.0], [49.0, 302.5], [48.0, 393.5], [50.0, 375.5], [51.0, 469.0], [53.0, 306.0], [55.0, 476.0], [54.0, 348.5], [57.0, 468.0], [56.0, 316.5], [61.0, 383.5], [63.0, 559.0], [65.0, 443.0], [70.0, 190.0], [74.0, 308.0], [73.0, 537.0], [1.0, 1247.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 74.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 143.0, "minX": 1.0, "maxY": 1246.0, "series": [{"data": [[2.0, 787.5], [3.0, 143.0], [4.0, 1221.5], [5.0, 452.0], [6.0, 318.0], [7.0, 327.0], [8.0, 446.5], [9.0, 1044.0], [10.0, 678.5], [11.0, 531.0], [12.0, 463.0], [13.0, 468.0], [14.0, 429.0], [15.0, 337.5], [16.0, 380.0], [17.0, 307.0], [18.0, 304.0], [19.0, 337.0], [20.0, 298.5], [21.0, 298.5], [22.0, 303.5], [23.0, 304.0], [24.0, 286.0], [25.0, 292.0], [26.0, 281.0], [27.0, 278.0], [28.0, 276.0], [29.0, 275.0], [30.0, 282.0], [31.0, 275.0], [33.0, 269.0], [32.0, 307.0], [34.0, 303.0], [35.0, 270.5], [37.0, 279.0], [36.0, 293.5], [39.0, 284.0], [38.0, 301.0], [41.0, 259.0], [40.0, 290.5], [43.0, 298.0], [42.0, 260.0], [45.0, 326.0], [44.0, 322.5], [46.0, 325.5], [47.0, 251.0], [49.0, 300.5], [48.0, 391.5], [50.0, 372.0], [51.0, 467.0], [53.0, 303.0], [55.0, 472.5], [54.0, 340.5], [57.0, 467.0], [56.0, 315.0], [61.0, 379.0], [63.0, 556.0], [65.0, 437.0], [70.0, 187.5], [74.0, 306.5], [73.0, 534.0], [1.0, 1246.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 74.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.68574008E12, "maxY": 26.133333333333333, "series": [{"data": [[1.68574086E12, 24.933333333333334], [1.68574266E12, 23.333333333333332], [1.68574206E12, 23.783333333333335], [1.68574224E12, 24.883333333333333], [1.68574164E12, 24.45], [1.68574026E12, 24.1], [1.68574122E12, 25.333333333333332], [1.68574068E12, 24.2], [1.68574284E12, 26.133333333333333], [1.6857411E12, 25.066666666666666], [1.68574242E12, 25.9], [1.68574182E12, 24.033333333333335], [1.68574008E12, 18.883333333333333], [1.6857417E12, 25.616666666666667], [1.6857402E12, 25.25], [1.6857408E12, 23.366666666666667], [1.68574128E12, 22.75], [1.68574062E12, 25.183333333333334], [1.6857429E12, 25.566666666666666], [1.6857423E12, 23.9], [1.68574248E12, 24.483333333333334], [1.68574188E12, 24.6], [1.68574146E12, 24.833333333333332], [1.68574044E12, 23.883333333333333], [1.68574308E12, 16.483333333333334], [1.68574104E12, 24.95], [1.68574296E12, 24.183333333333334], [1.68574236E12, 25.65], [1.68574194E12, 25.566666666666666], [1.68574134E12, 24.983333333333334], [1.68574056E12, 24.033333333333335], [1.68574152E12, 24.933333333333334], [1.68574038E12, 25.833333333333332], [1.68574314E12, 0.4666666666666667], [1.68574098E12, 25.3], [1.68574254E12, 25.8], [1.68574272E12, 25.283333333333335], [1.68574212E12, 25.583333333333332], [1.685742E12, 25.016666666666666], [1.6857414E12, 24.766666666666666], [1.6857405E12, 24.783333333333335], [1.68574302E12, 24.533333333333335], [1.68574092E12, 24.05], [1.6857426E12, 24.683333333333334], [1.68574218E12, 25.45], [1.68574158E12, 24.45], [1.68574032E12, 23.916666666666668], [1.68574176E12, 24.933333333333334], [1.68574014E12, 24.383333333333333], [1.68574116E12, 24.483333333333334], [1.68574074E12, 25.6], [1.68574278E12, 25.433333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68574314E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.5, "minX": 1.68574008E12, "maxY": 26.133333333333333, "series": [{"data": [[1.68574086E12, 24.95], [1.68574266E12, 23.333333333333332], [1.68574206E12, 23.783333333333335], [1.68574224E12, 24.883333333333333], [1.68574164E12, 24.45], [1.68574026E12, 24.116666666666667], [1.68574122E12, 25.333333333333332], [1.68574068E12, 24.2], [1.68574284E12, 26.133333333333333], [1.6857411E12, 25.066666666666666], [1.68574242E12, 25.9], [1.68574182E12, 24.033333333333335], [1.68574008E12, 18.05], [1.6857417E12, 25.616666666666667], [1.6857402E12, 25.25], [1.6857408E12, 23.366666666666667], [1.68574128E12, 22.75], [1.68574062E12, 25.166666666666668], [1.6857429E12, 25.566666666666666], [1.6857423E12, 23.9], [1.68574248E12, 24.483333333333334], [1.68574188E12, 24.6], [1.68574146E12, 24.833333333333332], [1.68574044E12, 23.883333333333333], [1.68574308E12, 17.1], [1.68574104E12, 24.95], [1.68574296E12, 24.183333333333334], [1.68574236E12, 25.65], [1.68574194E12, 25.566666666666666], [1.68574134E12, 24.983333333333334], [1.68574056E12, 24.05], [1.68574152E12, 24.933333333333334], [1.68574038E12, 25.833333333333332], [1.68574314E12, 0.5], [1.68574098E12, 25.3], [1.68574254E12, 25.8], [1.68574272E12, 25.3], [1.68574212E12, 25.583333333333332], [1.685742E12, 25.016666666666666], [1.6857414E12, 24.766666666666666], [1.6857405E12, 24.783333333333335], [1.68574302E12, 24.716666666666665], [1.68574092E12, 24.033333333333335], [1.6857426E12, 24.683333333333334], [1.68574218E12, 25.45], [1.68574158E12, 24.45], [1.68574032E12, 23.9], [1.68574176E12, 24.933333333333334], [1.68574014E12, 24.383333333333333], [1.68574116E12, 24.483333333333334], [1.68574074E12, 25.6], [1.68574278E12, 25.416666666666668]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68574314E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.68574008E12, "maxY": 8.716666666666667, "series": [{"data": [[1.68574086E12, 8.316666666666666], [1.68574266E12, 7.783333333333333], [1.68574206E12, 7.933333333333334], [1.68574224E12, 8.266666666666667], [1.68574164E12, 8.116666666666667], [1.68574026E12, 8.066666666666666], [1.68574122E12, 8.433333333333334], [1.68574068E12, 8.1], [1.68574284E12, 8.716666666666667], [1.6857411E12, 8.333333333333334], [1.68574242E12, 8.65], [1.68574182E12, 7.966666666666667], [1.68574008E12, 5.5], [1.6857417E12, 8.583333333333334], [1.6857402E12, 8.416666666666666], [1.6857408E12, 7.8], [1.68574128E12, 7.583333333333333], [1.68574062E12, 8.333333333333334], [1.6857429E12, 8.516666666666667], [1.6857423E12, 7.916666666666667], [1.68574248E12, 8.166666666666666], [1.68574188E12, 8.166666666666666], [1.68574146E12, 8.266666666666667], [1.68574044E12, 7.95], [1.68574308E12, 6.1], [1.68574104E12, 8.35], [1.68574296E12, 8.05], [1.68574236E12, 8.5], [1.68574194E12, 8.583333333333334], [1.68574134E12, 8.333333333333334], [1.68574056E12, 8.05], [1.68574152E12, 8.3], [1.68574038E12, 8.6], [1.68574314E12, 0.18333333333333332], [1.68574098E12, 8.4], [1.68574254E12, 8.583333333333334], [1.68574272E12, 8.433333333333334], [1.68574212E12, 8.5], [1.685742E12, 8.316666666666666], [1.6857414E12, 8.266666666666667], [1.6857405E12, 8.266666666666667], [1.68574302E12, 8.366666666666667], [1.68574092E12, 8.033333333333333], [1.6857426E12, 8.233333333333333], [1.68574218E12, 8.6], [1.68574158E12, 8.166666666666666], [1.68574032E12, 7.966666666666667], [1.68574176E12, 8.333333333333334], [1.68574014E12, 8.116666666666667], [1.68574116E12, 8.183333333333334], [1.68574074E12, 8.5], [1.68574278E12, 8.466666666666667]], "isOverall": false, "label": "Sitemap Request-success", "isController": false}, {"data": [[1.68574086E12, 8.3], [1.68574266E12, 7.8], [1.68574206E12, 7.916666666666667], [1.68574224E12, 8.266666666666667], [1.68574164E12, 8.133333333333333], [1.68574026E12, 8.05], [1.68574122E12, 8.416666666666666], [1.68574068E12, 8.083333333333334], [1.68574284E12, 8.716666666666667], [1.6857411E12, 8.333333333333334], [1.68574242E12, 8.666666666666666], [1.68574182E12, 8.033333333333333], [1.68574008E12, 6.333333333333333], [1.6857417E12, 8.583333333333334], [1.6857402E12, 8.416666666666666], [1.6857408E12, 7.8], [1.68574128E12, 7.633333333333334], [1.68574062E12, 8.4], [1.6857429E12, 8.516666666666667], [1.6857423E12, 8.016666666666667], [1.68574248E12, 8.15], [1.68574188E12, 8.183333333333334], [1.68574146E12, 8.233333333333333], [1.68574044E12, 7.966666666666667], [1.68574308E12, 5.483333333333333], [1.68574104E12, 8.316666666666666], [1.68574296E12, 8.05], [1.68574236E12, 8.5], [1.68574194E12, 8.516666666666667], [1.68574134E12, 8.316666666666666], [1.68574056E12, 7.983333333333333], [1.68574152E12, 8.316666666666666], [1.68574038E12, 8.633333333333333], [1.68574314E12, 0.15], [1.68574098E12, 8.433333333333334], [1.68574254E12, 8.583333333333334], [1.68574272E12, 8.433333333333334], [1.68574212E12, 8.533333333333333], [1.685742E12, 8.35], [1.6857414E12, 8.266666666666667], [1.6857405E12, 8.266666666666667], [1.68574302E12, 8.183333333333334], [1.68574092E12, 8.016666666666667], [1.6857426E12, 8.233333333333333], [1.68574218E12, 8.5], [1.68574158E12, 8.166666666666666], [1.68574032E12, 7.95], [1.68574176E12, 8.266666666666667], [1.68574014E12, 8.1], [1.68574116E12, 8.183333333333334], [1.68574074E12, 8.516666666666667], [1.68574278E12, 8.466666666666667]], "isOverall": false, "label": "Single Keyword Request-success", "isController": false}, {"data": [[1.68574086E12, 8.333333333333334], [1.68574266E12, 7.75], [1.68574206E12, 7.933333333333334], [1.68574224E12, 8.35], [1.68574164E12, 8.2], [1.68574026E12, 8.0], [1.68574122E12, 8.483333333333333], [1.68574068E12, 8.016666666666667], [1.68574284E12, 8.7], [1.6857411E12, 8.4], [1.68574242E12, 8.583333333333334], [1.68574182E12, 8.033333333333333], [1.68574008E12, 6.216666666666667], [1.6857417E12, 8.45], [1.6857402E12, 8.416666666666666], [1.6857408E12, 7.766666666666667], [1.68574128E12, 7.533333333333333], [1.68574062E12, 8.433333333333334], [1.6857429E12, 8.533333333333333], [1.6857423E12, 7.966666666666667], [1.68574248E12, 8.166666666666666], [1.68574188E12, 8.25], [1.68574146E12, 8.333333333333334], [1.68574044E12, 7.966666666666667], [1.68574308E12, 5.516666666666667], [1.68574104E12, 8.283333333333333], [1.68574296E12, 8.083333333333334], [1.68574236E12, 8.65], [1.68574194E12, 8.466666666666667], [1.68574134E12, 8.333333333333334], [1.68574056E12, 8.016666666666667], [1.68574152E12, 8.316666666666666], [1.68574038E12, 8.6], [1.68574314E12, 0.16666666666666666], [1.68574098E12, 8.466666666666667], [1.68574254E12, 8.633333333333333], [1.68574272E12, 8.433333333333334], [1.68574212E12, 8.55], [1.685742E12, 8.35], [1.6857414E12, 8.233333333333333], [1.6857405E12, 8.25], [1.68574302E12, 8.166666666666666], [1.68574092E12, 7.983333333333333], [1.6857426E12, 8.216666666666667], [1.68574218E12, 8.35], [1.68574158E12, 8.116666666666667], [1.68574032E12, 7.983333333333333], [1.68574176E12, 8.333333333333334], [1.68574014E12, 8.166666666666666], [1.68574116E12, 8.116666666666667], [1.68574074E12, 8.583333333333334], [1.68574278E12, 8.483333333333333]], "isOverall": false, "label": "Multiple Keyword Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68574314E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.5, "minX": 1.68574008E12, "maxY": 26.133333333333333, "series": [{"data": [[1.68574086E12, 24.95], [1.68574266E12, 23.333333333333332], [1.68574206E12, 23.783333333333335], [1.68574224E12, 24.883333333333333], [1.68574164E12, 24.45], [1.68574026E12, 24.116666666666667], [1.68574122E12, 25.333333333333332], [1.68574068E12, 24.2], [1.68574284E12, 26.133333333333333], [1.6857411E12, 25.066666666666666], [1.68574242E12, 25.9], [1.68574182E12, 24.033333333333335], [1.68574008E12, 18.05], [1.6857417E12, 25.616666666666667], [1.6857402E12, 25.25], [1.6857408E12, 23.366666666666667], [1.68574128E12, 22.75], [1.68574062E12, 25.166666666666668], [1.6857429E12, 25.566666666666666], [1.6857423E12, 23.9], [1.68574248E12, 24.483333333333334], [1.68574188E12, 24.6], [1.68574146E12, 24.833333333333332], [1.68574044E12, 23.883333333333333], [1.68574308E12, 17.1], [1.68574104E12, 24.95], [1.68574296E12, 24.183333333333334], [1.68574236E12, 25.65], [1.68574194E12, 25.566666666666666], [1.68574134E12, 24.983333333333334], [1.68574056E12, 24.05], [1.68574152E12, 24.933333333333334], [1.68574038E12, 25.833333333333332], [1.68574314E12, 0.5], [1.68574098E12, 25.3], [1.68574254E12, 25.8], [1.68574272E12, 25.3], [1.68574212E12, 25.583333333333332], [1.685742E12, 25.016666666666666], [1.6857414E12, 24.766666666666666], [1.6857405E12, 24.783333333333335], [1.68574302E12, 24.716666666666665], [1.68574092E12, 24.033333333333335], [1.6857426E12, 24.683333333333334], [1.68574218E12, 25.45], [1.68574158E12, 24.45], [1.68574032E12, 23.9], [1.68574176E12, 24.933333333333334], [1.68574014E12, 24.383333333333333], [1.68574116E12, 24.483333333333334], [1.68574074E12, 25.6], [1.68574278E12, 25.416666666666668]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68574314E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

